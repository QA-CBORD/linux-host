{"version":3,"sources":["webpack:///./src/app/sections/accounts/shared/pipes/credit-card-type/credit-card-type.pipe.ts","webpack:///./src/app/sections/ordering/shared/pipes/modify-prep-time/index.ts","webpack:///./src/app/sections/ordering/shared/pipes/modify-prep-time/modify-prep-time.module.ts","webpack:///./src/app/sections/ordering/shared/pipes/modify-prep-time/modify-prep-time.pipe.ts","webpack:///./src/app/sections/ordering/shared/pipes/price-units-resolver/price-units-resolver.module.ts","webpack:///./src/app/sections/ordering/shared/pipes/price-units-resolver/price-units-resolver.pipe.ts","webpack:///./src/app/sections/ordering/shared/ui-components/order-details/order-details.module.ts","webpack:///./src/app/sections/ordering/shared/ui-components/order-details/pipes/account-type-resolver.pipe.ts","webpack:///./src/app/sections/ordering/shared/ui-components/order-details/pipes/type-message.pipe.ts","webpack:///./src/app/shared/ui-components/st-textarea-floating-label/st-textarea-floating-label.module.ts"],"names":[],"mappings":"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","file":"default~ordering-ordering-module~pages-cart-cart-module~pages-recent-orders-recent-orders-module.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CREDITCARD_TYPE } from '../../../accounts.config';\r\n\r\n@Pipe({\r\n  name: 'creditCardType',\r\n})\r\nexport class CreditCardTypePipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    return CREDITCARD_TYPE[parseInt(value) - 1];\r\n  }\r\n}\r\n","export * from './modify-prep-time.module';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ModifyPrepTimePipe } from './modify-prep-time.pipe';\r\n\r\nconst declarations = [ModifyPrepTimePipe];\r\n\r\n@NgModule({\r\n  declarations,\r\n  imports: [CommonModule],\r\n  exports: declarations,\r\n})\r\nexport class ModifyPrepTimeModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ORDER_TYPE } from '@sections/ordering/ordering.config';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MerchantOrderTypesInfo } from '@sections/ordering';\r\n\r\n@Pipe({\r\n  name: 'modifyPrepTime',\r\n})\r\nexport class ModifyPrepTimePipe implements PipeTransform {\r\n\r\n  constructor(private readonly datePipe: DatePipe) {\r\n  }\r\n\r\n  transform(\r\n    { dueTime, orderType, isASAP }: any = {},\r\n    { pickupPrepTime, deliveryPrepTime }: MerchantOrderTypesInfo,\r\n    isShowTime: boolean = true): string {\r\n\r\n    if (isASAP && !isShowTime) return 'ASAP';\r\n    const minute = 60000;\r\n    const time = new Date(dueTime);\r\n    const timeInMilliseconds = time.getTime();\r\n    let finalTime = timeInMilliseconds;\r\n\r\n    if (isASAP) {\r\n      switch (orderType) {\r\n        case ORDER_TYPE.PICKUP:\r\n          finalTime = timeInMilliseconds + pickupPrepTime * minute;\r\n          break;\r\n        case ORDER_TYPE.DELIVERY:\r\n          finalTime = timeInMilliseconds + deliveryPrepTime * minute;\r\n          break;\r\n      }\r\n    }\r\n\r\n    return this.datePipe.transform(new Date(finalTime), 'EE, MMM d, h:mm a');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { PriceUnitsResolverPipe } from './price-units-resolver.pipe';\r\n\r\n@NgModule({\r\n  declarations: [PriceUnitsResolverPipe],\r\n  exports: [\r\n    PriceUnitsResolverPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  providers: [CurrencyPipe]\r\n})\r\nexport class PriceUnitsResolverModule { }\r\n","import { ChangeDetectorRef, Pipe, PipeTransform } from '@angular/core';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { OrderingService } from '@sections/ordering/services/ordering.service';\r\nimport { ORDERING_CONTENT_STRINGS } from '@sections/ordering/ordering.config';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Pipe({\r\n  name: 'priceUnitsResolver',\r\n  pure: false,\r\n})\r\nexport class PriceUnitsResolverPipe implements PipeTransform {\r\n  private singleMealUnit: string = 'meal';\r\n  private pluralMealUnit: string = 'meals';\r\n\r\n  constructor(private readonly currencyPipe: CurrencyPipe,\r\n              private readonly orderingService: OrderingService) {\r\n    this.updateMealStringUnits();\r\n  }\r\n\r\n  transform(value: number, mealBased: boolean = false): string {\r\n    return mealBased\r\n      ? `${value} ${value === 1 ? this.singleMealUnit : this.pluralMealUnit}`\r\n      : this.currencyPipe.transform(value);\r\n  }\r\n\r\n  private async updateMealStringUnits() {\r\n    this.singleMealUnit =\r\n      await this.orderingService.getContentStringByName(ORDERING_CONTENT_STRINGS.labelMealSuffix)\r\n        .pipe(take(1)).toPromise();\r\n    this.pluralMealUnit =\r\n      await this.orderingService.getContentStringByName(ORDERING_CONTENT_STRINGS.mealSuffixPlural)\r\n        .pipe(take(1)).toPromise();\r\n  }\r\n}\r\n","import { ModifyPrepTimeModule } from '@sections/ordering/shared/pipes/modify-prep-time';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OrderDetailsComponent } from '@sections/ordering';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { TypeMessagePipe } from './pipes/type-message.pipe';\r\nimport { StDateTimePickerModule } from '@sections/ordering/shared/ui-components/st-date-time-picker/st-date-time-picker.module';\r\nimport { DeliveryAddressesModalModule } from '@sections/ordering/shared/ui-components/delivery-addresses.modal/delivery-addresses.modal.module';\r\nimport { PriceUnitsResolverModule } from '@sections/ordering/shared/pipes/price-units-resolver/price-units-resolver.module';\r\nimport { CreditCardTypePipe } from '@sections/accounts/shared/pipes/credit-card-type/credit-card-type.pipe';\r\nimport { AccountTypeResolverPipe } from './pipes/account-type-resolver.pipe';\r\nimport { PriceUnitsResolverPipe } from '@sections/ordering/shared/pipes/price-units-resolver/price-units-resolver.pipe';\r\nimport { AddressHeaderFormatPipeModule } from '@shared/pipes/address-header-format-pipe/address-header-format-pipe.module';\r\nimport { StTextareaFloatingLabelModule } from '@shared/ui-components/st-textarea-floating-label/st-textarea-floating-label.module';\r\n\r\nconst declarations = [OrderDetailsComponent, TypeMessagePipe, AccountTypeResolverPipe];\r\n\r\n@NgModule({\r\n  declarations,\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    StDateTimePickerModule,\r\n    DeliveryAddressesModalModule,\r\n    PriceUnitsResolverModule,\r\n    ModifyPrepTimeModule,\r\n    AddressHeaderFormatPipeModule,\r\n    StTextareaFloatingLabelModule\r\n  ],\r\n  exports: [OrderDetailsComponent],\r\n  providers: [CreditCardTypePipe, PriceUnitsResolverPipe],\r\n})\r\nexport class OrderDetailsModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { UserAccount } from '@core/model/account/account.model';\r\nimport { PriceUnitsResolverPipe } from '@sections/ordering/shared/pipes/price-units-resolver/price-units-resolver.pipe';\r\nimport { CreditCardTypePipe } from '@sections/accounts/shared/pipes/credit-card-type/credit-card-type.pipe';\r\nimport { isCreditCardAccount } from '@core/utils/general-helpers';\r\n\r\n@Pipe({\r\n  name: 'accountTypeResolver',\r\n})\r\nexport class AccountTypeResolverPipe implements PipeTransform {\r\n  constructor(\r\n    private readonly priceUnitsResolverPipe: PriceUnitsResolverPipe,\r\n    private readonly creditCardTypePipe: CreditCardTypePipe\r\n  ) {}\r\n\r\n  transform(acc: UserAccount, mealBased: boolean): string {\r\n    if (acc.id === 'rollup') {\r\n      return `${acc.accountDisplayName}`;\r\n    }\r\n    if (isCreditCardAccount(acc)) {\r\n      return `${this.creditCardTypePipe.transform(acc.accountTender)} ending in ${acc.lastFour}`;\r\n    }\r\n    return `${acc.accountDisplayName} (${this.priceUnitsResolverPipe.transform(acc.balance, mealBased)})`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ORDER_TYPE } from \"@sections/ordering/ordering.config\";\r\n\r\n@Pipe({\r\n  name: 'typeMessage'\r\n})\r\nexport class TypeMessagePipe implements PipeTransform {\r\n\r\n  transform(type: ORDER_TYPE, text: string): string {\r\n    const delivery = 'delivery';\r\n    const pickUp = 'pickup';\r\n\r\n    return `${type === ORDER_TYPE.PICKUP ? pickUp : delivery} ${text}`;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { StTextareaFloatingLabelComponent } from './st-textarea-floating-label.component';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nconst declarations = [StTextareaFloatingLabelComponent];\r\n\r\n@NgModule({\r\n  declarations,\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule\r\n  ],\r\n  exports: declarations\r\n})\r\nexport class StTextareaFloatingLabelModule { }\r\n"],"sourceRoot":""}