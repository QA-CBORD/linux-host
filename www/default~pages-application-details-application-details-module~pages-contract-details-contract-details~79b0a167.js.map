{"version":3,"sources":["webpack:///./src/app/sections/housing/applications/applications-state.service.ts","webpack:///./src/app/sections/housing/applications/applications.model.ts","webpack:///./src/app/sections/housing/applications/applications.service.ts","webpack:///./src/app/sections/housing/attributes/attributes.model.ts","webpack:///./src/app/sections/housing/charge-schedules/charge-schedules.model.ts","webpack:///./src/app/sections/housing/charge-schedules/charge-schedules.service.ts","webpack:///./src/app/sections/housing/contracts/contracts-state.service.ts","webpack:///./src/app/sections/housing/contracts/contracts.model.ts","webpack:///./src/app/sections/housing/contracts/contracts.service.ts","webpack:///./src/app/sections/housing/facility-attributes/facility-attributes.model.ts","webpack:///./src/app/sections/housing/housing-auth/housing-auth.service.ts","webpack:///./src/app/sections/housing/housing-proxy.service.ts","webpack:///./src/app/sections/housing/housing.config.ts","webpack:///./src/app/sections/housing/housing.model.ts","webpack:///./src/app/sections/housing/housing.service.ts","webpack:///./src/app/sections/housing/patron-attributes/patron-attributes.service.ts","webpack:///./src/app/sections/housing/preferences/preferences.service.ts","webpack:///./src/app/sections/housing/questions/questions-storage.service.ts","webpack:///./src/app/sections/housing/questions/questions.model.ts","webpack:///./src/app/sections/housing/questions/questions.service.ts","webpack:///./src/app/sections/housing/questions/types/index.ts","webpack:///./src/app/sections/housing/questions/types/question-base.ts","webpack:///./src/app/sections/housing/questions/types/question-blockquote.ts","webpack:///./src/app/sections/housing/questions/types/question-charge-schedule.ts","webpack:///./src/app/sections/housing/questions/types/question-checkbox-group.ts","webpack:///./src/app/sections/housing/questions/types/question-contract-details.ts","webpack:///./src/app/sections/housing/questions/types/question-date-signed.ts","webpack:///./src/app/sections/housing/questions/types/question-date.ts","webpack:///./src/app/sections/housing/questions/types/question-dropdown.ts","webpack:///./src/app/sections/housing/questions/types/question-facility-attributes.ts","webpack:///./src/app/sections/housing/questions/types/question-form-control.ts","webpack:///./src/app/sections/housing/questions/types/question-header.ts","webpack:///./src/app/sections/housing/questions/types/question-paragraph.ts","webpack:///./src/app/sections/housing/questions/types/question-radio-group.ts","webpack:///./src/app/sections/housing/questions/types/question-reorder.ts","webpack:///./src/app/sections/housing/questions/types/question-textarea.ts","webpack:///./src/app/sections/housing/questions/types/question-textbox.ts","webpack:///./src/app/sections/housing/terms/terms.model.ts","webpack:///./src/app/sections/housing/terms/terms.service.ts","webpack:///./src/app/sections/housing/utils/define.ts","webpack:///./src/app/sections/housing/utils/has-value.ts","webpack:///./src/app/sections/housing/utils/index.ts","webpack:///./src/app/sections/housing/utils/is-defined.ts","webpack:///./src/app/sections/housing/utils/parse-json-to-array.ts","webpack:///./src/app/sections/housing/utils/trim-empty-keys.ts","webpack:///./src/app/sections/housing/utils/validators/index.ts","webpack:///./src/app/sections/housing/utils/validators/integer.ts","webpack:///./src/app/sections/housing/utils/validators/numeric.ts","webpack:///./src/app/shared/services/observable-session-storage/observable-session-storage.service.ts","webpack:///./src/app/shared/services/observable-storage/observable-storage.service.ts"],"names":[],"mappings":"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","file":"default~pages-application-details-application-details-module~pages-contract-details-contract-details~79b0a167.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ApplicationDetails } from './applications.model';\r\n\r\nexport interface ApplicationsState {\r\n  entities: ApplicationEntities;\r\n  applicationDetails: ApplicationDetails;\r\n}\r\n\r\nexport interface ApplicationEntities {\r\n  [key: number]: ApplicationDetails;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationsStateService {\r\n  private readonly _defaultState: ApplicationsState = {\r\n    entities: {},\r\n    applicationDetails: null,\r\n  };\r\n\r\n  private readonly _applicationsStateSource: BehaviorSubject<ApplicationsState> = new BehaviorSubject<\r\n    ApplicationsState\r\n  >(this._defaultState);\r\n\r\n  readonly applicationEntities$: Observable<ApplicationEntities> = this._applicationsStateSource.pipe(\r\n    map(this._getEntities)\r\n  );\r\n\r\n  readonly applications$: Observable<ApplicationDetails[]> = this.applicationEntities$.pipe(\r\n    map(this._getApplications.bind(this))\r\n  );\r\n\r\n  readonly applicationDetails$: Observable<ApplicationDetails> = this._applicationsStateSource.pipe(\r\n    map(this._getApplicationDetails)\r\n  );\r\n\r\n  set applicationsState(value: ApplicationsState) {\r\n    this._applicationsStateSource.next(value);\r\n  }\r\n\r\n  get applicationsState(): ApplicationsState {\r\n    return this._applicationsStateSource.getValue();\r\n  }\r\n\r\n  setApplications(applications: ApplicationDetails[]): void {\r\n    this.applicationsState = { ...this.applicationsState, entities: this._toApplicationEntities(applications) };\r\n  }\r\n\r\n  setApplication(applicationKey: number, applicationDetails: ApplicationDetails) {\r\n    const entites: ApplicationEntities = this.applicationsState.entities;\r\n\r\n    this.applicationsState = {\r\n      ...this.applicationsState,\r\n      entities: { ...entites, [applicationKey]: applicationDetails },\r\n      applicationDetails,\r\n    };\r\n  }\r\n\r\n  setApplicationDetails(applicationDetails: ApplicationDetails): void {\r\n    this.applicationsState = { ...this.applicationsState, applicationDetails };\r\n  }\r\n\r\n  private _getEntities(state: ApplicationsState) {\r\n    return state.entities;\r\n  }\r\n\r\n  private _getApplications(entities: ApplicationEntities) {\r\n    return this._toApplicationsArray(entities);\r\n  }\r\n\r\n  private _toApplicationEntities(applications: ApplicationDetails[]): ApplicationEntities {\r\n    return applications.reduce((entities: ApplicationEntities, application: ApplicationDetails) => {\r\n      return {\r\n        ...entities,\r\n        [application.applicationDefinition.key]: application,\r\n      };\r\n    }, {});\r\n  }\r\n\r\n  private _toApplicationsArray(entities: ApplicationEntities): ApplicationDetails[] {\r\n    return Object.keys(entities).map((key: string) => entities[parseInt(key, 10)]);\r\n  }\r\n\r\n  private _getApplicationDetails(state: ApplicationsState): ApplicationDetails {\r\n    return state.applicationDetails;\r\n  }\r\n}\r\n","import { isDefined } from '../utils';\r\nimport { Attribute, AttributeOptions } from '@sections/housing/attributes/attributes.model';\r\n\r\nexport enum ApplicationStatus {\r\n  New = 1,\r\n  Pending = 2,\r\n  Submitted = 3,\r\n  Accepted = 4,\r\n  Canceled = 5,\r\n}\r\n\r\nexport interface ApplicationDefinitionOptions {\r\n  key: number;\r\n  termKey: number;\r\n  applicationTitle: string;\r\n  applicationFormJson?: string;\r\n}\r\n\r\nexport class ApplicationDefinition implements ApplicationDefinitionOptions {\r\n  key: number;\r\n  termKey: number;\r\n  applicationTitle: string;\r\n  applicationFormJson?: string;\r\n\r\n  constructor(options: ApplicationDefinitionOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as ApplicationDefinitionOptions;\r\n    }\r\n\r\n    this.key = Number(options.key);\r\n    this.termKey = Number(options.termKey);\r\n    this.applicationTitle = String(options.applicationTitle);\r\n\r\n    if (isDefined(options.applicationFormJson)) {\r\n      this.applicationFormJson = String(options.applicationFormJson);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface PatronApplicationOptions {\r\n  applicationDefinitionKey: number;\r\n  status: ApplicationStatus;\r\n  key?: number;\r\n  patronKey?: number;\r\n  createdDateTime?: string;\r\n  submittedDateTime?: string;\r\n  acceptedDateTime?: string;\r\n  cancelledDateTime?: string;\r\n  modifiedDate?: string;\r\n  isApplicationSubmitted?: boolean;\r\n  isApplicationAccepted?: boolean;\r\n  isApplicationCanceled?: boolean;\r\n}\r\n\r\nexport class PatronApplication implements PatronApplicationOptions {\r\n  applicationDefinitionKey: number;\r\n  status: ApplicationStatus;\r\n  key?: number;\r\n  patronKey?: number;\r\n  createdDateTime?: string;\r\n  submittedDateTime?: string;\r\n  acceptedDateTime?: string;\r\n  cancelledDateTime?: string;\r\n  modifiedDate?: string;\r\n  isApplicationSubmitted?: boolean;\r\n  isApplicationAccepted?: boolean;\r\n  isApplicationCanceled?: boolean;\r\n\r\n  constructor(options: PatronApplicationOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as PatronApplicationOptions;\r\n    }\r\n\r\n    this.applicationDefinitionKey = Number(options.applicationDefinitionKey);\r\n    this.status = options.status || ApplicationStatus.New;\r\n\r\n    if (isDefined(options.key)) {\r\n      this.key = Number(options.key);\r\n    }\r\n\r\n    if (isDefined(options.patronKey)) {\r\n      this.patronKey = Number(options.patronKey);\r\n    }\r\n\r\n    if (isDefined(options.createdDateTime)) {\r\n      this.createdDateTime = String(options.createdDateTime);\r\n    }\r\n\r\n    if (isDefined(options.submittedDateTime)) {\r\n      this.submittedDateTime = String(options.submittedDateTime);\r\n    }\r\n\r\n    if (isDefined(options.acceptedDateTime)) {\r\n      this.acceptedDateTime = String(options.acceptedDateTime);\r\n    }\r\n\r\n    if (isDefined(options.cancelledDateTime)) {\r\n      this.cancelledDateTime = String(options.cancelledDateTime);\r\n    }\r\n\r\n    if (isDefined(options.modifiedDate)) {\r\n      this.modifiedDate = String(options.modifiedDate);\r\n    }\r\n\r\n    if (isDefined(options.isApplicationSubmitted)) {\r\n      this.isApplicationSubmitted = Boolean(options.isApplicationSubmitted);\r\n    }\r\n\r\n    if (isDefined(options.isApplicationAccepted)) {\r\n      this.isApplicationAccepted = Boolean(options.isApplicationAccepted);\r\n    }\r\n\r\n    if (isDefined(options.isApplicationCanceled)) {\r\n      this.isApplicationCanceled = Boolean(options.isApplicationCanceled);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface PatronAttributeOptions extends AttributeOptions {\r\n  key?: number;\r\n  patronKey?: number;\r\n}\r\n\r\nexport class PatronAttribute extends Attribute implements PatronAttributeOptions {\r\n  key?: number;\r\n  patronKey?: number;\r\n\r\n  constructor(options: PatronAttributeOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as PatronAttributeOptions;\r\n    }\r\n\r\n    super(options);\r\n\r\n    if (isDefined(options.key)) {\r\n      this.key = Number(options.key);\r\n    }\r\n\r\n    if (isDefined(options.patronKey)) {\r\n      this.patronKey = Number(options.patronKey);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface PatronPreferenceOptions {\r\n  rank: number;\r\n  facilityKey: number;\r\n  key?: number;\r\n  preferenceKey?: number;\r\n}\r\n\r\nexport class PatronPreference {\r\n  rank: number;\r\n  facilityKey: number;\r\n  key?: number;\r\n  preferenceKey?: number;\r\n\r\n  constructor(options: PatronPreferenceOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as PatronPreferenceOptions;\r\n    }\r\n\r\n    this.rank = Number(options.rank);\r\n    this.facilityKey = Number(options.facilityKey);\r\n\r\n    if (isDefined(options.key)) {\r\n      this.key = Number(options.key);\r\n    }\r\n\r\n    if (isDefined(options.preferenceKey)) {\r\n      this.preferenceKey = Number(options.preferenceKey);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface ApplicationRequestOptions {\r\n  patronApplication: PatronApplication;\r\n  patronAttributes?: PatronAttribute[];\r\n  patronPreferences?: PatronPreference[];\r\n}\r\n\r\nexport class ApplicationRequest {\r\n  patronApplication: PatronApplication;\r\n  patronAttributes?: PatronAttribute[];\r\n  patronPreferences?: PatronPreference[];\r\n\r\n  constructor(options: ApplicationRequestOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as ApplicationRequestOptions;\r\n    }\r\n\r\n    this.patronApplication = new PatronApplication(options.patronApplication);\r\n\r\n    if (Array.isArray(options.patronAttributes)) {\r\n      this.patronAttributes = options.patronAttributes.map((attribute: any) => new PatronAttribute(attribute));\r\n    }\r\n\r\n    if (Array.isArray(options.patronPreferences)) {\r\n      this.patronPreferences = options.patronPreferences.map((preference: any) => new PatronPreference(preference));\r\n    }\r\n  }\r\n}\r\n\r\nexport interface ApplicationDetailsOptions {\r\n  applicationDefinition: ApplicationDefinition;\r\n  patronApplication: PatronApplication;\r\n  patronAttributes?: PatronAttribute[];\r\n  patronPreferences?: PatronPreference[];\r\n}\r\n\r\nexport class ApplicationDetails implements ApplicationDetailsOptions {\r\n  applicationDefinition: ApplicationDefinition;\r\n  patronApplication: PatronApplication;\r\n  patronAttributes?: PatronAttribute[];\r\n  patronPreferences?: PatronPreference[];\r\n\r\n  constructor(options: ApplicationDetailsOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as ApplicationDetailsOptions;\r\n    }\r\n\r\n    this.applicationDefinition = new ApplicationDefinition(options.applicationDefinition);\r\n\r\n    if (isDefined(options.patronApplication)) {\r\n      this.patronApplication = new PatronApplication(options.patronApplication);\r\n    }\r\n\r\n    if (Array.isArray(options.patronAttributes)) {\r\n      this.patronAttributes = options.patronAttributes.map((attribute: any) => new PatronAttribute(attribute));\r\n    }\r\n\r\n    if (Array.isArray(options.patronPreferences)) {\r\n      this.patronPreferences = options.patronPreferences.map((preference: any) => new PatronPreference(preference));\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, forkJoin, of } from 'rxjs';\r\nimport { map, tap, switchMap, mapTo, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport { Environment } from '../../../environment';\r\nimport { isDefined, parseJsonToArray } from '../utils';\r\n\r\nimport { HousingProxyService } from '../housing-proxy.service';\r\nimport { PatronAttributesService } from '../patron-attributes/patron-attributes.service';\r\nimport { PreferencesService } from '../preferences/preferences.service';\r\nimport { ApplicationsStateService } from './applications-state.service';\r\nimport { QuestionsEntries, QuestionsStorageService, StoredApplication } from '../questions/questions-storage.service';\r\nimport { QuestionsService } from '@sections/housing/questions/questions.service';\r\n\r\nimport { ResponseStatus } from '../housing.model';\r\nimport {\r\n  ApplicationStatus,\r\n  ApplicationDetails,\r\n  PatronApplication,\r\n  PatronAttribute,\r\n  PatronPreference,\r\n  ApplicationRequest,\r\n  ApplicationDefinition,\r\n} from './applications.model';\r\nimport {\r\n  QuestionCheckboxGroup,\r\n  QuestionFormControl,\r\n  QuestionReorder,\r\n  QuestionReorderValue,\r\n  QuestionsPage,\r\n  QuestionTextbox,\r\n} from '@sections/housing/questions/questions.model';\r\nimport { QuestionBase } from '@sections/housing/questions/types';\r\nimport { FormArray, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationsService {\r\n  private readonly _patronApplicationsUrl: string = `${\r\n    Environment.currentEnvironment.housing_aws_url\r\n  }/patron-applications/v.1.0/patron-applications`;\r\n\r\n  constructor(\r\n    private _housingProxyService: HousingProxyService,\r\n    private _patronAttributesService: PatronAttributesService,\r\n    private _preferencesService: PreferencesService,\r\n    private _applicationsStateService: ApplicationsStateService,\r\n    private _questionsStorageService: QuestionsStorageService,\r\n    private _questionsService: QuestionsService\r\n  ) {}\r\n\r\n  getQuestions(key: number): Observable<QuestionsPage[]> {\r\n    return this._questionsStorageService.getQuestions(key).pipe(\r\n      withLatestFrom(this._applicationsStateService.applicationDetails$),\r\n      map(([storedQuestions, applicationDetails]: [QuestionsEntries, ApplicationDetails]) => {\r\n        const pages: QuestionBase[][] = this._questionsService.getQuestionsPages(\r\n          applicationDetails.applicationDefinition.applicationFormJson\r\n        );\r\n        const patronApplication: PatronApplication = applicationDetails.patronApplication;\r\n        const status: ApplicationStatus = patronApplication && patronApplication.status;\r\n        const isSubmitted = status === ApplicationStatus.Submitted;\r\n\r\n        return this._getPages(pages, storedQuestions, applicationDetails, isSubmitted);\r\n      })\r\n    );\r\n  }\r\n\r\n  submitApplication(\r\n    applicationKey: number,\r\n    application: ApplicationDetails,\r\n    form: any,\r\n    isSubmitted: boolean\r\n  ): Observable<ResponseStatus> {\r\n    if (isSubmitted) {\r\n      return this._updateApplication(application, form, ApplicationStatus.Submitted);\r\n    }\r\n\r\n    return forkJoin(\r\n      this._updateCreatedDateTime(applicationKey, application.patronApplication),\r\n      this._questionsStorageService.updateSubmittedDateTime(applicationKey)\r\n    ).pipe(\r\n      switchMap(([createdDateTime, submittedDateTime]: [string, string]) => {\r\n        const applicationDetails: ApplicationDetails = this._createApplicationDetails(\r\n          applicationKey,\r\n          application,\r\n          ApplicationStatus.Submitted,\r\n          createdDateTime,\r\n          submittedDateTime\r\n        );\r\n\r\n        return this._updateApplication(applicationDetails, form, ApplicationStatus.Submitted);\r\n      })\r\n    );\r\n  }\r\n\r\n  saveApplication(\r\n    applicationKey: number,\r\n    application: ApplicationDetails,\r\n    form: any,\r\n    isSubmitted: boolean\r\n  ): Observable<ResponseStatus> {\r\n    if (isSubmitted) {\r\n      return this._updateApplication(application, form, ApplicationStatus.Pending);\r\n    }\r\n\r\n    return this._updateCreatedDateTime(applicationKey, application.patronApplication).pipe(\r\n      switchMap((createdDateTime: string) => {\r\n        const applicationDetails: ApplicationDetails = this._createApplicationDetails(\r\n          applicationKey,\r\n          application,\r\n          ApplicationStatus.Pending,\r\n          createdDateTime\r\n        );\r\n\r\n        return this._updateApplication(applicationDetails, form, ApplicationStatus.Pending);\r\n      })\r\n    );\r\n  }\r\n\r\n  next(applicationKey: number, applicationDetails: ApplicationDetails, formValue: any): Observable<any> {\r\n    const patronApplication: PatronApplication = applicationDetails.patronApplication;\r\n    const status: ApplicationStatus = patronApplication && patronApplication.status;\r\n\r\n    return this._updateCreatedDateTime(applicationKey, patronApplication).pipe(\r\n      switchMap((createdDateTime: string) => {\r\n        const updatedStatus: ApplicationStatus = status || ApplicationStatus.Pending;\r\n        const updatedPatronApplication: PatronApplication = new PatronApplication({\r\n          ...patronApplication,\r\n          applicationDefinitionKey: applicationKey,\r\n          createdDateTime,\r\n          status: updatedStatus,\r\n        });\r\n        const updatedApplicationDetails: ApplicationDetails = new ApplicationDetails({\r\n          ...applicationDetails,\r\n          patronApplication: updatedPatronApplication,\r\n        });\r\n\r\n        this._applicationsStateService.setApplication(applicationKey, updatedApplicationDetails);\r\n\r\n        return this._questionsStorageService.updateQuestions(applicationKey, formValue, updatedStatus);\r\n      })\r\n    );\r\n  }\r\n\r\n  patchApplicationsByStoredStatus(applications: ApplicationDetails[]): Observable<ApplicationDetails[]> {\r\n    return forkJoin(\r\n      applications.map((application: ApplicationDetails) => this._patchApplicationByStoredStatus(application))\r\n    );\r\n  }\r\n\r\n  private _getPages(\r\n    pages: QuestionBase[][],\r\n    storedQuestions: QuestionsEntries,\r\n    applicationDetails: ApplicationDetails,\r\n    isSubmitted: boolean\r\n  ): QuestionsPage[] {\r\n    return pages.map((page: QuestionBase[]) => ({\r\n      form: this._toFormGroup(page, storedQuestions, applicationDetails, isSubmitted),\r\n      questions: page,\r\n    }));\r\n  }\r\n\r\n  private _toFormGroup(\r\n    questions: QuestionBase[],\r\n    storedQuestions: QuestionsEntries,\r\n    applicationDetails: ApplicationDetails,\r\n    isSubmitted: boolean\r\n  ): FormGroup {\r\n    return this._questionsService.toFormGroup(\r\n      questions,\r\n      storedQuestions,\r\n      (group: any, question: QuestionFormControl, questionName: string, storedValue: string) => {\r\n        if (question instanceof QuestionCheckboxGroup) {\r\n          group[questionName] = this._questionsService.toQuestionCheckboxControl(storedValue, question);\r\n        } else if (question instanceof QuestionReorder) {\r\n          group[questionName] = this._toQuestionReorderControl(\r\n            storedValue,\r\n            question,\r\n            applicationDetails.patronPreferences\r\n          );\r\n        } else {\r\n          group[questionName] = this._toFormControl(\r\n            storedValue,\r\n            question,\r\n            applicationDetails.patronAttributes,\r\n            isSubmitted\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private _toQuestionReorderControl(\r\n    storedValue: any,\r\n    question: QuestionReorder,\r\n    preferences: PatronPreference[]\r\n  ): FormArray {\r\n    const values: QuestionReorderValue[] = storedValue || question.values;\r\n    const selectedValues: QuestionReorderValue[] = values.filter((value: QuestionReorderValue) => value.selected);\r\n    const controls: FormControl[] = selectedValues\r\n      .sort((current: QuestionReorderValue, next: QuestionReorderValue) =>\r\n        QuestionReorder.sort(preferences, current, next, selectedValues.length)\r\n      )\r\n      .map((value: QuestionReorderValue) => new FormControl(value));\r\n\r\n    return new FormArray(controls);\r\n  }\r\n\r\n  private _toFormControl(\r\n    storedValue: any,\r\n    question: QuestionFormControl,\r\n    attributes: PatronAttribute[],\r\n    isSubmitted: boolean\r\n  ): FormControl {\r\n    let value: any = storedValue;\r\n\r\n    if (!isDefined(value)) {\r\n      value = this._questionsService.getAttributeValue(attributes, question);\r\n    }\r\n\r\n    const validators: ValidatorFn[] = [];\r\n\r\n    if (question.required) {\r\n      validators.push(Validators.required);\r\n    }\r\n\r\n    if (question instanceof QuestionTextbox) {\r\n      this._questionsService.addDataTypeValidator(question, validators);\r\n    }\r\n\r\n    return new FormControl({ value, disabled: isSubmitted }, validators);\r\n  }\r\n\r\n  private _updateCreatedDateTime(key: number, patronApplication: PatronApplication): Observable<string> {\r\n    const createdDateTime: string = patronApplication && patronApplication.createdDateTime;\r\n\r\n    return this._questionsStorageService.updateCreatedDateTime(key, createdDateTime);\r\n  }\r\n\r\n  private _updateApplication(\r\n    applicationDetails: ApplicationDetails,\r\n    form: any,\r\n    status: ApplicationStatus\r\n  ): Observable<ResponseStatus> {\r\n    const applicationDefinition: ApplicationDefinition = applicationDetails.applicationDefinition;\r\n    const applicationKey: number = applicationDefinition.key;\r\n\r\n    return this._questionsStorageService.updateQuestions(applicationKey, form, status).pipe(\r\n      switchMap((storedApplication: StoredApplication) => {\r\n        const parsedJson: any[] = parseJsonToArray(applicationDefinition.applicationFormJson);\r\n        const questions = storedApplication.questions;\r\n        const patronAttributes: PatronAttribute[] = this._patronAttributesService.getAttributes(\r\n          applicationDetails.patronAttributes,\r\n          parsedJson,\r\n          questions\r\n        );\r\n        const patronPreferences: PatronPreference[] = this._preferencesService.getPreferences(\r\n          applicationDetails.patronPreferences,\r\n          parsedJson,\r\n          questions\r\n        );\r\n        const body: ApplicationRequest = new ApplicationRequest({\r\n          patronApplication: applicationDetails.patronApplication,\r\n          patronAttributes,\r\n          patronPreferences,\r\n        });\r\n\r\n        return this._housingProxyService.put(this._patronApplicationsUrl, body);\r\n      }),\r\n      tap(() => this._applicationsStateService.setApplication(applicationKey, applicationDetails)),\r\n      switchMap((response: ResponseStatus) =>\r\n        this._questionsStorageService.removeApplication(applicationKey).pipe(mapTo(response))\r\n      )\r\n    );\r\n  }\r\n\r\n  private _createApplicationDetails(\r\n    applicationKey: number,\r\n    applicationDetails: ApplicationDetails,\r\n    status: ApplicationStatus,\r\n    createdDateTime: string,\r\n    submittedDateTime?: string\r\n  ): ApplicationDetails {\r\n    const options: PatronApplication = {\r\n      ...applicationDetails.patronApplication,\r\n      applicationDefinitionKey: applicationKey,\r\n      createdDateTime,\r\n      status,\r\n    };\r\n\r\n    if (submittedDateTime) {\r\n      options.submittedDateTime = submittedDateTime;\r\n      options.isApplicationSubmitted = true;\r\n    }\r\n\r\n    const patronApplication: PatronApplication = new PatronApplication(options);\r\n\r\n    return new ApplicationDetails({ ...applicationDetails, patronApplication });\r\n  }\r\n\r\n  private _patchApplicationByStoredStatus(applicationDetails: ApplicationDetails): Observable<ApplicationDetails> {\r\n    let patronApplication: PatronApplication = applicationDetails.patronApplication;\r\n    const status: ApplicationStatus = patronApplication && patronApplication.status;\r\n\r\n    if (status && status !== ApplicationStatus.New) {\r\n      return of(applicationDetails);\r\n    }\r\n\r\n    return this._questionsStorageService.getApplicationStatus(applicationDetails.applicationDefinition.key).pipe(\r\n      map((storedStatus: ApplicationStatus) => {\r\n        if (!storedStatus) {\r\n          return applicationDetails;\r\n        }\r\n\r\n        applicationDetails.patronApplication = new PatronApplication({\r\n          ...patronApplication,\r\n          status: storedStatus,\r\n        });\r\n\r\n        return applicationDetails;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { isDefined } from '@sections/housing/utils';\r\n\r\nexport class AttributeOptions {\r\n  attributeConsumerKey: number;\r\n  value: string;\r\n  effectiveDate?: string;\r\n  endDate?: string;\r\n}\r\n\r\nexport class Attribute implements AttributeOptions {\r\n  attributeConsumerKey: number;\r\n  value: string;\r\n  effectiveDate: string;\r\n  endDate: string;\r\n\r\n  constructor(options: AttributeOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as AttributeOptions;\r\n    }\r\n\r\n    this.attributeConsumerKey = Number(options.attributeConsumerKey);\r\n    this.value = isDefined(options.value) ? String(options.value) : null;\r\n\r\n    if (isDefined(options.effectiveDate)) {\r\n      this.effectiveDate = String(options.effectiveDate);\r\n    }\r\n\r\n    if (isDefined(options.endDate)) {\r\n      this.endDate = String(options.endDate);\r\n    }\r\n  }\r\n}\r\n","import { isDefined } from '@sections/housing/utils';\r\n\r\nexport enum ChargeScheduleFields {\r\n  chargeScheduleName,\r\n  linkedChargeScheduleStartDate,\r\n  linkedChargeScheduleEndDate,\r\n  fullChargeEstimate,\r\n  remainingChargeEstimate,\r\n  estimateReason,\r\n  scheduleType,\r\n  chargeAmount,\r\n}\r\n\r\nexport interface ChargeScheduleValueOptions {\r\n  label: string;\r\n  value: string;\r\n  selected?: boolean;\r\n  type: string;\r\n}\r\n\r\nexport class ChargeScheduleValue implements ChargeScheduleValueOptions {\r\n  label: string;\r\n  value: string;\r\n  selected?: boolean;\r\n  type: string;\r\n\r\n  constructor(options: ChargeScheduleValueOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as ChargeScheduleValueOptions;\r\n    }\r\n\r\n    this.label = String(options.label);\r\n    this.value = isDefined(options.value) ? String(options.value) : null;\r\n    this.selected = Boolean(options.selected);\r\n    this.type = options.type;\r\n  }\r\n}\r\n\r\nexport interface ChargeScheduleOptions {\r\n  chargeScheduleName: string;\r\n  linkedChargeScheduleStartDate: string;\r\n  linkedChargeScheduleEndDate: string;\r\n  active: boolean;\r\n  fullChargeEstimate: number;\r\n  remainingChargeEstimate: number;\r\n  estimateReason: string;\r\n  scheduleType: string;\r\n  chargeAmount: number;\r\n}\r\n\r\nexport class ChargeSchedule implements ChargeScheduleOptions {\r\n  chargeScheduleName: string;\r\n  linkedChargeScheduleStartDate: string;\r\n  linkedChargeScheduleEndDate: string;\r\n  active: boolean;\r\n  fullChargeEstimate: number;\r\n  remainingChargeEstimate: number;\r\n  estimateReason: string;\r\n  scheduleType: string;\r\n  chargeAmount: number;\r\n\r\n  constructor(options: ChargeScheduleOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as ChargeScheduleOptions;\r\n    }\r\n\r\n    this.chargeScheduleName = String(options.chargeScheduleName);\r\n    this.linkedChargeScheduleStartDate = String(options.linkedChargeScheduleStartDate);\r\n    this.linkedChargeScheduleEndDate = String(options.linkedChargeScheduleEndDate);\r\n    this.active = Boolean(options.active);\r\n    this.fullChargeEstimate = Number(options.fullChargeEstimate);\r\n    this.remainingChargeEstimate = Number(options.remainingChargeEstimate);\r\n    this.estimateReason = String(options.estimateReason);\r\n    this.scheduleType = String(options.scheduleType);\r\n    this.chargeAmount = Number(options.chargeAmount);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  ChargeSchedule,\r\n  ChargeScheduleFields,\r\n  ChargeScheduleValue,\r\n} from '@sections/housing/charge-schedules/charge-schedules.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ChargeSchedulesService {\r\n  constructor() {}\r\n\r\n  getChargeSchedules(\r\n    chargeSchedules: ChargeSchedule[],\r\n    chargeScheduleValues: ChargeScheduleValue[]\r\n  ): ChargeScheduleValue[][] {\r\n    if (!chargeSchedules.length) {\r\n      return [];\r\n    }\r\n\r\n    const availableChargeScheduleValues: ChargeScheduleValue[] = this.getAvailableChargeScheduleValues(\r\n      chargeScheduleValues\r\n    );\r\n\r\n    return chargeSchedules.map((chargeSchedule: ChargeSchedule) =>\r\n      availableChargeScheduleValues.map((value: ChargeScheduleValue) => {\r\n        return new ChargeScheduleValue({ label: value.label, value: chargeSchedule[value.value], type: value.type });\r\n      })\r\n    );\r\n  }\r\n\r\n  getAvailableChargeScheduleValues(chargeScheduleValues: ChargeScheduleValue[]): ChargeScheduleValue[] {\r\n    return chargeScheduleValues\r\n      .filter((value: ChargeScheduleValue) => value.selected)\r\n      .map((value: ChargeScheduleValue) => {\r\n        const chargeScheduleFieldEnum = parseInt(value.value, 10);\r\n        const chargeScheduleField: string = ChargeScheduleFields[chargeScheduleFieldEnum];\r\n        const type = this.getChargeScheduleFieldType(chargeScheduleFieldEnum);\r\n        let csValue = new ChargeScheduleValue({ label: value.label, value: chargeScheduleField, type: type });\r\n        return csValue;\r\n      });\r\n  }\r\n\r\n  getChargeScheduleFieldType(chargeScheduleField): string{\r\n    switch(chargeScheduleField){\r\n      case ChargeScheduleFields.chargeAmount:\r\n      case ChargeScheduleFields.fullChargeEstimate:\r\n      case ChargeScheduleFields.remainingChargeEstimate:\r\n        return \"currency\";\r\n      case ChargeScheduleFields.chargeScheduleName:\r\n      case ChargeScheduleFields.estimateReason:\r\n      case ChargeScheduleFields.scheduleType:\r\n        return \"string\";\r\n      case ChargeScheduleFields.linkedChargeScheduleEndDate:\r\n      case ChargeScheduleFields.linkedChargeScheduleStartDate:\r\n        return \"date\";\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ContractListDetails, ContractDetails } from './contracts.model';\r\n\r\nexport interface ContractsState {\r\n  entities: ContractEntities;\r\n  contractDetails: ContractDetails;\r\n}\r\n\r\nexport interface ContractEntities {\r\n  [key: number]: ContractListDetails;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ContractsStateService {\r\n  private readonly _defaultState: ContractsState = {\r\n    entities: {},\r\n    contractDetails: null,\r\n  };\r\n\r\n  private readonly _contractsStateSource: BehaviorSubject<ContractsState> = new BehaviorSubject<ContractsState>(\r\n    this._defaultState\r\n  );\r\n\r\n  readonly contractEntities$: Observable<ContractEntities> = this._contractsStateSource.pipe(map(this._getEntities));\r\n\r\n  readonly contracts$: Observable<ContractListDetails[]> = this.contractEntities$.pipe(\r\n    map(this._getContracts.bind(this))\r\n  );\r\n\r\n  readonly contractDetails$: Observable<ContractDetails> = this._contractsStateSource.pipe(\r\n    map(this._getContractDetails)\r\n  );\r\n\r\n  set contractsState(value: ContractsState) {\r\n    this._contractsStateSource.next(value);\r\n  }\r\n\r\n  get contractsState(): ContractsState {\r\n    return this._contractsStateSource.getValue();\r\n  }\r\n\r\n  setContracts(contracts: ContractListDetails[]): void {\r\n    this.contractsState = { ...this.contractsState, entities: this._toContractEntities(contracts) };\r\n  }\r\n\r\n  setContract(contractKey: number, contractDetails: ContractListDetails) {\r\n    const entites: ContractEntities = this.contractsState.entities;\r\n\r\n    this.contractsState = {\r\n      ...this.contractsState,\r\n      entities: { ...entites, [contractKey]: contractDetails },\r\n    };\r\n  }\r\n\r\n  setContractDetails(contractDetails: ContractDetails): void {\r\n    this.contractsState = { ...this.contractsState, contractDetails };\r\n  }\r\n\r\n  private _getEntities(state: ContractsState) {\r\n    return state.entities;\r\n  }\r\n\r\n  private _getContracts(entities: ContractEntities) {\r\n    return this._toContractsArray(entities);\r\n  }\r\n\r\n  private _toContractEntities(contracts: ContractListDetails[]): ContractEntities {\r\n    return contracts.reduce((entities: ContractEntities, contract: ContractListDetails) => {\r\n      return {\r\n        ...entities,\r\n        [contract.id]: contract,\r\n      };\r\n    }, {});\r\n  }\r\n\r\n  private _toContractsArray(entities: ContractEntities): ContractListDetails[] {\r\n    return Object.keys(entities).map((key: string) => entities[parseInt(key, 10)]);\r\n  }\r\n\r\n  private _getContractDetails(state: ContractsState): ContractDetails {\r\n    return state.contractDetails;\r\n  }\r\n}\r\n","import { isDefined } from '../utils';\r\n\r\nimport { PatronAttribute } from '../applications/applications.model';\r\nimport { ChargeSchedule } from '@sections/housing/charge-schedules/charge-schedules.model';\r\nimport { FacilityAttribute } from '@sections/housing/facility-attributes/facility-attributes.model';\r\n\r\nexport enum ContractStatus {\r\n  Preliminary = 1,\r\n  Active = 2,\r\n  Suspended = 3,\r\n  Completed = 4,\r\n  Expired = 5,\r\n  Terminated = 6,\r\n  Canceled = 7,\r\n}\r\n\r\nexport enum CONTRACT_DETAIL_KEYS {\r\n  ACTUAL_START = 'ACTUAL_START',\r\n  ACTUAL_END = 'ACTUAL_END',\r\n  EXPECTED_START = 'EXPECTED_START',\r\n  EXPECTED_END = 'EXPECTED_END',\r\n  ASSET_TYPE = 'ASSET_TYPE',\r\n  CONTRACT_NUMBER = 'CONTRACT_NUMBER',\r\n  CONTRACT_STATE = 'CONTRACT_STATE',\r\n  CONTRACT_ID = 'CONTRACT_ID',\r\n  COST = 'COST',\r\n  DATE_SIGNED = 'DATE_SIGNED',\r\n  EXPIRATION_DATE = 'EXPIRATION_DATE',\r\n  SCHEDULE_COST = 'SCHEDULE_COST',\r\n}\r\n\r\nexport enum CONTRACT_DETAIL_FIELDS {\r\n  ACTUAL_START = 'actualStartDate',\r\n  ACTUAL_END = 'actualEndDate',\r\n  EXPECTED_START = 'expectedStartDate',\r\n  EXPECTED_END = 'expectedEndDate',\r\n  ASSET_TYPE = 'assetTypeName',\r\n  CONTRACT_NUMBER = 'contractNumber',\r\n  CONTRACT_STATE = 'status',\r\n  CONTRACT_ID = 'id',\r\n  COST = 'contractCost',\r\n  DATE_SIGNED = 'dateSigned',\r\n  EXPIRATION_DATE = 'expirationDate',\r\n  SCHEDULE_COST = 'scheduleCost',\r\n}\r\n\r\nexport interface ContractListDetailsOptions {\r\n  id: number;\r\n  contractElementId: number;\r\n  state: string;\r\n  applicationDescription: string;\r\n  applicationFormJson: any;\r\n  applicationTitle: string;\r\n  applicationTypeId: number;\r\n  applicationAvailableEndDateTime: string;\r\n  applicationAvailableStartDateTime: string;\r\n  cancellationDateTime: string;\r\n  expirationDateTime: string;\r\n  expireWhenAssigned: number;\r\n  numberOfDaysToExpire: number;\r\n  termId: number;\r\n  acceptedDate?: string;\r\n}\r\n\r\nexport class ContractListDetails implements ContractListDetailsOptions {\r\n  id: number;\r\n  contractElementId: number;\r\n  state: string;\r\n  applicationDescription: string;\r\n  applicationFormJson: any;\r\n  applicationTitle: string;\r\n  applicationTypeId: number;\r\n  applicationAvailableEndDateTime: string;\r\n  applicationAvailableStartDateTime: string;\r\n  cancellationDateTime: string;\r\n  expirationDateTime: string;\r\n  expireWhenAssigned: number;\r\n  numberOfDaysToExpire: number;\r\n  termId: number;\r\n  acceptedDate?: string;\r\n\r\n  constructor(options: ContractListDetailsOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as ContractListDetailsOptions;\r\n    }\r\n\r\n    this.id = Number(options.id);\r\n    this.contractElementId = Number(options.contractElementId);\r\n    this.state = String(options.state);\r\n    this.applicationDescription = String(options.applicationDescription);\r\n    this.applicationFormJson = options.applicationFormJson;\r\n    this.applicationTitle = String(options.applicationTitle);\r\n    this.applicationTypeId = Number(options.applicationTypeId);\r\n    this.applicationAvailableEndDateTime = String(options.applicationAvailableEndDateTime);\r\n    this.applicationAvailableStartDateTime = String(options.applicationAvailableStartDateTime);\r\n    this.cancellationDateTime = String(options.cancellationDateTime);\r\n    this.expirationDateTime = String(options.expirationDateTime);\r\n    this.expireWhenAssigned = Number(options.expireWhenAssigned);\r\n    this.numberOfDaysToExpire = Number(options.numberOfDaysToExpire);\r\n    this.termId = Number(options.termId);\r\n\r\n    if (isDefined(options.acceptedDate)) {\r\n      this.acceptedDate = String(options.acceptedDate);\r\n    }\r\n  }\r\n\r\n  static toContractListDetails(contracts: any): ContractListDetails[] {\r\n    return Array.isArray(contracts) ? contracts.map((contract: any) => new ContractListDetails(contract)) : [];\r\n  }\r\n}\r\n\r\nexport interface ContractInfoOptions {\r\n  id: number;\r\n  contractName: string;\r\n  term: number;\r\n  expectedStartDate: string;\r\n  expectedEndDate: string;\r\n  status: string;\r\n  facilityId: number;\r\n  chargedThroughDate: string;\r\n  expirationDate: string;\r\n  actualStartDate: string;\r\n  actualEndDate: string;\r\n  depositRequired: number;\r\n  depositPaid: number;\r\n  gracePeriodBeforeStart: number;\r\n  gracePeriodBeforeEnd: number;\r\n  contractNumber: string;\r\n  checkInDateTime: string;\r\n  checkOutDateTime: string;\r\n  linkToSpace: string;\r\n  changeRoomIn: number;\r\n  changeRoomOut: number;\r\n  note: string;\r\n  assetTypeName: string;\r\n  assetTypeId: number;\r\n  dateTimeAccepted: string;\r\n  buyOut: boolean;\r\n  accessStartDate: string;\r\n  accessEndDate: string;\r\n  dateTimeSigned?: string;\r\n}\r\n\r\nexport class ContractInfo implements ContractInfoOptions {\r\n  id: number;\r\n  contractName: string;\r\n  term: number;\r\n  expectedStartDate: string;\r\n  expectedEndDate: string;\r\n  status: string;\r\n  facilityId: number;\r\n  chargedThroughDate: string;\r\n  expirationDate: string;\r\n  actualStartDate: string;\r\n  actualEndDate: string;\r\n  depositRequired: number;\r\n  depositPaid: number;\r\n  gracePeriodBeforeStart: number;\r\n  gracePeriodBeforeEnd: number;\r\n  contractNumber: string;\r\n  checkInDateTime: string;\r\n  checkOutDateTime: string;\r\n  linkToSpace: string;\r\n  changeRoomIn: number;\r\n  changeRoomOut: number;\r\n  note: string;\r\n  assetTypeName: string;\r\n  assetTypeId: number;\r\n  dateTimeAccepted: string;\r\n  buyOut: boolean;\r\n  accessStartDate: string;\r\n  accessEndDate: string;\r\n  dateTimeSigned?: string;\r\n\r\n  constructor(options: ContractInfoOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as ContractInfoOptions;\r\n    }\r\n\r\n    this.id = Number(options.id);\r\n    this.contractName = String(options.contractName);\r\n    this.term = Number(options.term);\r\n    this.expectedStartDate = String(options.expectedStartDate);\r\n    this.expectedEndDate = String(options.expectedEndDate);\r\n    this.status = String(options.status);\r\n    this.facilityId = Number(options.facilityId);\r\n    this.chargedThroughDate = String(options.chargedThroughDate);\r\n    this.expirationDate = String(options.expirationDate);\r\n    this.actualStartDate = String(options.actualStartDate);\r\n    this.actualEndDate = String(options.actualEndDate);\r\n    this.depositRequired = Number(options.depositRequired);\r\n    this.depositPaid = Number(options.depositPaid);\r\n    this.gracePeriodBeforeStart = Number(options.gracePeriodBeforeStart);\r\n    this.gracePeriodBeforeEnd = Number(options.gracePeriodBeforeEnd);\r\n    this.contractNumber = String(options.contractNumber);\r\n    this.checkInDateTime = String(options.checkInDateTime);\r\n    this.checkOutDateTime = String(options.checkOutDateTime);\r\n    this.linkToSpace = String(options.linkToSpace);\r\n    this.changeRoomIn = Number(options.changeRoomIn);\r\n    this.changeRoomOut = Number(options.changeRoomOut);\r\n    this.note = String(options.note);\r\n    this.assetTypeName = String(options.assetTypeName);\r\n    this.assetTypeId = Number(options.assetTypeId);\r\n    this.dateTimeAccepted = String(options.dateTimeAccepted);\r\n    this.buyOut = Boolean(options.buyOut);\r\n    this.accessStartDate = String(options.accessStartDate);\r\n    this.accessEndDate = String(options.accessEndDate);\r\n\r\n    if (isDefined(options.dateTimeSigned)) {\r\n      this.dateTimeSigned = String(options.dateTimeSigned);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface ContractDetailsOptions {\r\n  contractInfo: ContractInfo;\r\n  formJson: any;\r\n  chargeSchedules: ChargeSchedule[];\r\n  patronAttributes: PatronAttribute[];\r\n  facilityAttributes: FacilityAttribute[];\r\n}\r\n\r\nexport class ContractDetails implements ContractDetailsOptions {\r\n  contractInfo: ContractInfo;\r\n  formJson: any;\r\n  chargeSchedules: ChargeSchedule[];\r\n  patronAttributes: PatronAttribute[];\r\n  facilityAttributes: FacilityAttribute[];\r\n\r\n  constructor(options: ContractDetailsOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as ContractDetailsOptions;\r\n    }\r\n\r\n    this.contractInfo = new ContractInfo(options.contractInfo);\r\n    this.formJson = options.formJson;\r\n\r\n    this.chargeSchedules = Array.isArray(options.chargeSchedules)\r\n      ? options.chargeSchedules.map((schedule: any) => new ChargeSchedule(schedule))\r\n      : [];\r\n\r\n    this.patronAttributes = Array.isArray(options.patronAttributes)\r\n      ? options.patronAttributes.map((attribute: any) => new PatronAttribute(attribute))\r\n      : [];\r\n\r\n    this.facilityAttributes = Array.isArray(options.facilityAttributes)\r\n      ? options.facilityAttributes.map((attribute: any) => new FacilityAttribute(attribute))\r\n      : [];\r\n  }\r\n}\r\n\r\nexport interface ContractRequestOptions {\r\n  contractElementKey: number;\r\n  dateSigned: string;\r\n}\r\n\r\nexport class ContractRequest {\r\n  contractElementKey: number;\r\n  dateSigned: string;\r\n\r\n  constructor(options: ContractRequestOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as ContractRequestOptions;\r\n    }\r\n\r\n    this.contractElementKey = Number(options.contractElementKey);\r\n    this.dateSigned = String(options.dateSigned);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport { isDefined } from '@sections/housing/utils';\r\nimport { Environment } from '../../../environment';\r\n\r\nimport { HousingProxyService } from '../housing-proxy.service';\r\nimport { QuestionsService } from '@sections/housing/questions/questions.service';\r\nimport { QuestionsEntries, QuestionsStorageService } from '@sections/housing/questions/questions-storage.service';\r\nimport { ContractsStateService } from '@sections/housing/contracts/contracts-state.service';\r\n\r\nimport { ResponseStatus } from '../housing.model';\r\nimport { CONTRACT_DETAIL_FIELDS, ContractDetails, ContractInfo, ContractRequest } from './contracts.model';\r\nimport {\r\n  QuestionBase,\r\n  QuestionChargeSchedule,\r\n  QuestionChargeScheduleBase,\r\n  QuestionCheckboxGroup,\r\n  QuestionContractDetails,\r\n  QuestionFormControl,\r\n} from '@sections/housing/questions/types';\r\nimport { QuestionsPage } from '@sections/housing/questions/questions.model';\r\nimport { QuestionFacilityAttributes } from '@sections/housing/questions/types/question-facility-attributes';\r\nimport { ChargeScheduleValue } from '@sections/housing/charge-schedules/charge-schedules.model';\r\nimport { ChargeSchedulesService } from '@sections/housing/charge-schedules/charge-schedules.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ContractsService {\r\n  private readonly _patronContractsUrl: string = `${\r\n    Environment.currentEnvironment.housing_aws_url\r\n  }/patron-applications/v.1.0/patron-contracts`;\r\n\r\n  private _isSigned: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  isSigned$: Observable<boolean> = this._isSigned.asObservable();\r\n\r\n  constructor(\r\n    private _housingProxyService: HousingProxyService,\r\n    private _questionsStorageService: QuestionsStorageService,\r\n    private _questionsService: QuestionsService,\r\n    private _contractsStateService: ContractsStateService,\r\n    private _chargeSchedulesService: ChargeSchedulesService\r\n  ) {}\r\n\r\n  getQuestions(key: number): Observable<QuestionsPage[]> {\r\n    return this._questionsStorageService.getApplication(key).pipe(\r\n      withLatestFrom(this._contractsStateService.contractDetails$),\r\n      map(([storedQuestions, contractDetails]: [QuestionsEntries, ContractDetails]) => {\r\n        const pages: QuestionBase[][] = this._getQuestionsPages(contractDetails);\r\n\r\n        return this._getPages(pages, storedQuestions, contractDetails);\r\n      })\r\n    );\r\n  }\r\n\r\n  submitContract(contractElementKey: number): Observable<ResponseStatus> {\r\n    const dateSigned: string = new Date().toISOString();\r\n    const body: ContractRequest = new ContractRequest({\r\n      contractElementKey,\r\n      dateSigned,\r\n    });\r\n\r\n    return this._housingProxyService.put(this._patronContractsUrl, body);\r\n  }\r\n\r\n  sign(isSigned: boolean): void {\r\n    this._isSigned.next(isSigned);\r\n  }\r\n\r\n  private _getQuestionsPages(contractDetails: ContractDetails): QuestionBase[][] {\r\n    const questions: QuestionBase[] = this._questionsService\r\n      .getQuestions(contractDetails.formJson)\r\n      .map((question: QuestionBase) => this._toChargeSchedulesGroup(question, contractDetails));\r\n\r\n    return this._questionsService.splitByPages(questions);\r\n  }\r\n\r\n  private _getPages(\r\n    pages: QuestionBase[][],\r\n    storedQuestions: QuestionsEntries,\r\n    contractDetails: ContractDetails\r\n  ): QuestionsPage[] {\r\n    return pages.map((page: QuestionBase[]) => ({\r\n      form: this._toFormGroup(page, storedQuestions, contractDetails),\r\n      questions: page,\r\n    }));\r\n  }\r\n\r\n  private _toFormGroup(\r\n    questions: QuestionBase[],\r\n    storedQuestions: QuestionsEntries,\r\n    contractDetails: ContractDetails\r\n  ): FormGroup {\r\n    return this._questionsService.toFormGroup(\r\n      questions,\r\n      storedQuestions,\r\n      (group, question: QuestionFormControl, questionName: string, storedValue: string) => {\r\n        if (question instanceof QuestionCheckboxGroup) {\r\n          group[questionName] = this._questionsService.toQuestionCheckboxControl(storedValue, question);\r\n        } else {\r\n          group[questionName] = this._toFormControl(storedValue, question, contractDetails);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private _toChargeSchedulesGroup(question: QuestionBase, contractDetails: ContractDetails): QuestionBase {\r\n    if (!(question instanceof QuestionChargeScheduleBase)) {\r\n      return question;\r\n    }\r\n\r\n    const chargeSchedulesGroup: ChargeScheduleValue[][] = this._chargeSchedulesService.getChargeSchedules(\r\n      contractDetails.chargeSchedules,\r\n      question.values\r\n    );\r\n\r\n    question = new QuestionChargeSchedule({ ...question, chargeSchedulesGroup });\r\n    return question;\r\n  }\r\n\r\n  private _toFormControl(\r\n    storedValue: any,\r\n    question: QuestionFormControl,\r\n    contractDetails: ContractDetails\r\n  ): FormControl {\r\n    let value: any = storedValue;\r\n\r\n    if (!isDefined(value)) {\r\n      if (question instanceof QuestionContractDetails) {\r\n        value = this._getContractDetailValue(question, contractDetails.contractInfo);\r\n      } else if (question instanceof QuestionFacilityAttributes) {\r\n        value = this._questionsService.getAttributeValue(contractDetails.facilityAttributes, question);\r\n      } else {\r\n        value = this._questionsService.getAttributeValue(contractDetails.patronAttributes, question) || '';\r\n      }\r\n    }\r\n\r\n    return new FormControl({ value, disabled: true });\r\n  }\r\n\r\n  private _getContractDetailValue(question: QuestionContractDetails, contractInfo: ContractInfo): string {\r\n    const contractKey: string = CONTRACT_DETAIL_FIELDS[question.contractId];\r\n\r\n    return contractInfo[contractKey] || '';\r\n  }\r\n}\r\n","import { isDefined } from '@sections/housing/utils';\r\nimport { Attribute, AttributeOptions } from '@sections/housing/attributes/attributes.model';\r\n\r\nexport interface FacilityAttributeOptions extends AttributeOptions {\r\n  facilityAttributeKey?: number;\r\n  facilityKey?: number;\r\n}\r\n\r\nexport class FacilityAttribute extends Attribute implements FacilityAttributeOptions {\r\n  facilityAttributeKey?: number;\r\n  facilityKey?: number;\r\n\r\n  constructor(options: FacilityAttributeOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as FacilityAttributeOptions;\r\n    }\r\n\r\n    super(options);\r\n\r\n    if (isDefined(options.facilityAttributeKey)) {\r\n      this.facilityAttributeKey = Number(options.facilityAttributeKey);\r\n    }\r\n\r\n    if (isDefined(options.facilityKey)) {\r\n      this.facilityKey = Number(options.facilityKey);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, shareReplay } from 'rxjs/operators';\r\nimport { AuthApiService } from '@core/service/auth-api/auth-api.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HousingAuthService {\r\n  token$: Observable<string>;\r\n\r\n  constructor(\r\n    private _authService: AuthApiService\r\n    ) {\r\n    this._initToken();\r\n  }\r\n\r\n  private _initToken(): void {\r\n    this.token$ = this._authService.sessionId$.pipe(\r\n      switchMap(() => this._authService.getExternalAuthenticationToken()),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { HousingAuthService } from './housing-auth/housing-auth.service';\r\n\r\nimport { Response, ResponseStatus } from './housing.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HousingProxyService {\r\n  constructor(private _http: HttpClient, private _housingAuthService: HousingAuthService) {}\r\n\r\n  request<T>(apiUrl: string, callback: (headers: HttpHeaders, apiUrl: string) => Observable<T>): Observable<T> {\r\n    return this._housingAuthService.token$.pipe(\r\n      switchMap((token: string) => {\r\n        const headers: HttpHeaders = new HttpHeaders({\r\n          Authorization: `Bearer ${token}`,\r\n        });\r\n\r\n        return callback(headers, apiUrl);\r\n      })\r\n    );\r\n  }\r\n\r\n  get<T>(apiUrl: string): Observable<T> {\r\n    return this.request<T>(apiUrl, (headers, apiUrl) =>\r\n      this._http\r\n        .get(apiUrl, {\r\n          headers,\r\n        })\r\n        .pipe(map((response: Response) => response.data))\r\n    );\r\n  }\r\n\r\n  put(apiUrl: string, body: any): Observable<ResponseStatus> {\r\n    return this.request<ResponseStatus>(apiUrl, (headers: HttpHeaders, apiUrl: string) =>\r\n      this._http.put<ResponseStatus>(apiUrl, body, {\r\n        headers: headers.set('Content-Type', 'application/json'),\r\n      })\r\n    );\r\n  }\r\n}\r\n","export enum LOCAL_ROUTING {\r\n  dashboard = 'dashboard',\r\n  applications = 'applications',\r\n  facilities = 'facilities',\r\n  contracts = 'contracts',\r\n  workOrders = 'work-orders',\r\n  units = 'units',\r\n}\r\n\r\nexport const STORAGE_KEY: string = 'housing';\r\n","import { ApplicationDetails } from './applications/applications.model';\r\nimport { ContractDetails, ContractListDetails } from './contracts/contracts.model';\r\n\r\nexport interface ResponseStatusDetails {\r\n  code: string;\r\n  member: string;\r\n  value: any;\r\n  message: string;\r\n}\r\n\r\nexport interface ResponseStatus {\r\n  statusCode: number;\r\n  status: string;\r\n  message: string;\r\n  traceId: string;\r\n  details: ResponseStatusDetails;\r\n}\r\n\r\nexport interface Response {\r\n  data?: any;\r\n  status: ResponseStatus;\r\n}\r\n\r\nexport interface DefinitionsResponseOptions {\r\n  applicationDefinitions: ApplicationDetails[];\r\n  contractDetails: ContractListDetails[];\r\n}\r\n\r\nexport class DefinitionsResponse {\r\n  applicationDefinitions: ApplicationDetails[];\r\n  contractDetails: ContractListDetails[];\r\n\r\n  constructor(options: DefinitionsResponseOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as DefinitionsResponseOptions;\r\n    }\r\n\r\n    this.applicationDefinitions = Array.isArray(options.applicationDefinitions)\r\n      ? options.applicationDefinitions.map((detail: any) => new ApplicationDetails(detail))\r\n      : [];\r\n\r\n    this.contractDetails = Array.isArray(options.contractDetails)\r\n      ? options.contractDetails.map((detail: any) => new ContractListDetails(detail))\r\n      : [];\r\n  }\r\n}\r\n\r\nexport interface DetailsResponseOptions {\r\n  applicationDetails: ApplicationDetails;\r\n  contractDetails: ContractDetails;\r\n}\r\n\r\nexport class DetailsResponse implements DetailsResponseOptions {\r\n  applicationDetails: ApplicationDetails;\r\n  contractDetails: ContractDetails;\r\n\r\n  constructor(options: DetailsResponseOptions) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {} as DetailsResponseOptions;\r\n    }\r\n\r\n    this.applicationDetails = new ApplicationDetails(options.applicationDetails);\r\n    this.contractDetails = new ContractDetails(options.contractDetails);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Observable, of, forkJoin, Subject } from 'rxjs';\r\nimport { map, switchMap, tap, catchError } from 'rxjs/operators';\r\n\r\nimport { Environment } from '../../environment';\r\n\r\nimport { HousingProxyService } from './housing-proxy.service';\r\nimport { ApplicationsStateService } from './applications/applications-state.service';\r\nimport { ContractsStateService } from './contracts/contracts-state.service';\r\nimport { TermsService } from './terms/terms.service';\r\nimport { ApplicationsService } from './applications/applications.service';\r\nimport { LoadingService } from '@core/service/loading/loading.service';\r\nimport { ContractsService } from '@sections/housing/contracts/contracts.service';\r\n\r\nimport { DefinitionsResponse, DetailsResponse, Response } from './housing.model';\r\nimport { ApplicationDetails } from './applications/applications.model';\r\nimport { ContractListDetails, ContractDetails } from './contracts/contracts.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HousingService {\r\n  private readonly _patronApplicationsUrl: string = `${\r\n    Environment.currentEnvironment.housing_aws_url\r\n  }/patron-applications/v.1.0/patron-applications`;\r\n\r\n  private readonly _applicationDefinitionUrl: string = `${this._patronApplicationsUrl}/application-definition`;\r\n\r\n  private _refreshDefinitionsSource: Subject<void> = new Subject<void>();\r\n\r\n  refreshDefinitions$: Observable<number> = this._refreshDefinitionsSource\r\n    .asObservable()\r\n    .pipe(switchMap(() => this._termsService.termId$));\r\n\r\n  constructor(\r\n    private _housingProxyService: HousingProxyService,\r\n    private _applicationsStateService: ApplicationsStateService,\r\n    private _contractsStateService: ContractsStateService,\r\n    private _termsService: TermsService,\r\n    private _applicationsService: ApplicationsService,\r\n    private _loadingService: LoadingService,\r\n    private _toastController: ToastController,\r\n    private _router: Router,\r\n    private _contractsService: ContractsService\r\n  ) {}\r\n\r\n  getDefinitions(termId: number) {\r\n    const apiUrl: string = `${this._patronApplicationsUrl}/term/${termId}/patron/self`;\r\n\r\n    return this._housingProxyService.get<DefinitionsResponse>(apiUrl).pipe(\r\n      map((response: any) => new DefinitionsResponse(response)),\r\n      switchMap((response: DefinitionsResponse) => this._patchDefinitionsByStore(response)),\r\n      tap((response: DefinitionsResponse) => this._setState(response.applicationDefinitions, response.contractDetails)),\r\n      catchError(() => this._handleGetDefinitionsError())\r\n    );\r\n  }\r\n\r\n  refreshDefinitions(): void {\r\n    this._refreshDefinitionsSource.next();\r\n  }\r\n\r\n  getDetails(key: number, queryParams: string[] = []): Observable<DetailsResponse> {\r\n    const queryString: string = queryParams.length ? `?${queryParams.join('&')}` : '';\r\n    const apiUrl: string = `${this._applicationDefinitionUrl}/${key}/patron/self${queryString}`;\r\n\r\n    return this._housingProxyService.get<DetailsResponse>(apiUrl).pipe(\r\n      map((response: any) => new DetailsResponse(response)),\r\n      tap((details: DetailsResponse) => {\r\n        if (details.applicationDetails) {\r\n          this._applicationsStateService.setApplicationDetails(details.applicationDetails);\r\n        }\r\n\r\n        if (details.contractDetails) {\r\n          this._contractsStateService.setContractDetails(details.contractDetails);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getApplicationDetails(key: number): Observable<ApplicationDetails> {\r\n    return this.getDetails(key).pipe(map((response: DetailsResponse) => response.applicationDetails));\r\n  }\r\n\r\n  getContractDetails(key: number, queryParams: string[] = []): Observable<ContractDetails> {\r\n    return this.getDetails(key, queryParams)\r\n      .pipe(map((response: DetailsResponse) => response.contractDetails))\r\n      .pipe(\r\n        tap((details: ContractDetails) => {\r\n          if (details.contractInfo.dateTimeSigned) {\r\n            this._contractsService.sign(true);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  handleSuccess(): void {\r\n    this._loadingService.closeSpinner();\r\n    this._router.navigate(['/housing/dashboard']).then(() => this.refreshDefinitions());\r\n  }\r\n\r\n  handleErrors(error: any): void {\r\n    let message = 'Something went wrong. Try again later';\r\n\r\n    this._loadingService.closeSpinner();\r\n\r\n    if (error instanceof HttpErrorResponse) {\r\n      const statusMessage: string = (error.error as Response).status.message;\r\n\r\n      message = statusMessage || message;\r\n    }\r\n\r\n    this._toastController\r\n      .create({\r\n        message,\r\n        position: 'top',\r\n        duration: 3000,\r\n        showCloseButton: true,\r\n      })\r\n      .then((toast: HTMLIonToastElement) => toast.present());\r\n  }\r\n\r\n  private _patchDefinitionsByStore(response: DefinitionsResponse): Observable<DefinitionsResponse> {\r\n    const { applicationDefinitions, contractDetails } = response;\r\n\r\n    const patchedApplications: Observable<ApplicationDetails[]> =\r\n      applicationDefinitions.length > 0\r\n        ? this._applicationsService.patchApplicationsByStoredStatus(applicationDefinitions)\r\n        : of([]);\r\n\r\n    return forkJoin(patchedApplications, of(contractDetails)).pipe(\r\n      map(\r\n        ([applicationDefinitions, contractDetails]: [ApplicationDetails[], ContractListDetails[]]) =>\r\n          new DefinitionsResponse({\r\n            applicationDefinitions,\r\n            contractDetails,\r\n          })\r\n      )\r\n    );\r\n  }\r\n\r\n  private _setState(applications: ApplicationDetails[], contracts: ContractListDetails[]): void {\r\n    this._applicationsStateService.setApplications(applications);\r\n    this._contractsStateService.setContracts(contracts);\r\n  }\r\n\r\n  private _handleGetDefinitionsError(): Observable<DefinitionsResponse> {\r\n    const applicationDefinitions: ApplicationDetails[] = [];\r\n    const contractDetails: ContractListDetails[] = [];\r\n\r\n    this._setState(applicationDefinitions, contractDetails);\r\n\r\n    return of(\r\n      new DefinitionsResponse({\r\n        applicationDefinitions,\r\n        contractDetails,\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { QuestionsEntries } from '../questions/questions-storage.service';\r\n\r\nimport { PatronAttribute } from '../applications/applications.model';\r\nimport { QuestionFormControl, QuestionBase } from '../questions/types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PatronAttributesService {\r\n  getAttributes(\r\n    patronAttributes: PatronAttribute[],\r\n    parsedJson: any[],\r\n    questionEntries: QuestionsEntries\r\n  ): PatronAttribute[] {\r\n    const facilityControls: QuestionFormControl[] = parsedJson.filter(\r\n      (control: QuestionBase) => control && (control as QuestionFormControl).consumerKey\r\n    );\r\n    const questions: string[] = Object.keys(questionEntries);\r\n\r\n    if (!facilityControls.length || !questions.length) {\r\n      return [];\r\n    }\r\n\r\n    return questions\r\n      .filter((questionName: string) =>\r\n        facilityControls.find((control: QuestionFormControl) => control.name === questionName)\r\n      )\r\n      .map((questionName: string) => {\r\n        const value: any = questionEntries[questionName];\r\n        const foundFacility: QuestionFormControl = facilityControls.find(\r\n          (control: QuestionFormControl) => control.name === questionName\r\n        );\r\n        const attributeConsumerKey: number = foundFacility.consumerKey;\r\n        const foundAttribute: PatronAttribute = patronAttributes.find(\r\n          (attribute: PatronAttribute) => attribute.attributeConsumerKey === attributeConsumerKey\r\n        );\r\n\r\n        if (foundAttribute) {\r\n          const key: number = foundAttribute.key;\r\n          const patronKey: number = foundAttribute.patronKey;\r\n          const effectiveDate: string = foundAttribute.effectiveDate;\r\n          const endDate: string = foundAttribute.endDate;\r\n\r\n          return new PatronAttribute({\r\n            attributeConsumerKey,\r\n            value,\r\n            key,\r\n            patronKey,\r\n            effectiveDate,\r\n            endDate,\r\n          });\r\n        }\r\n\r\n        return new PatronAttribute({ attributeConsumerKey, value });\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { QuestionsEntries } from '../questions/questions-storage.service';\r\n\r\nimport { PatronPreference } from '../applications/applications.model';\r\nimport { QuestionReorder, QuestionBase, QuestionReorderValue } from '../questions/types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PreferencesService {\r\n  getPreferences(\r\n    patronPreferences: PatronPreference[],\r\n    parsedJson: any[],\r\n    questions: QuestionsEntries\r\n  ): PatronPreference[] {\r\n    const facilityPicker: QuestionReorder = parsedJson.filter(\r\n      (control: QuestionBase) => control && (control as QuestionReorder).facilityPicker\r\n    )[0];\r\n\r\n    if (!facilityPicker) {\r\n      return patronPreferences.filter((preference: PatronPreference) => preference.facilityKey);\r\n    }\r\n\r\n    const facilities: QuestionReorderValue[] = facilityPicker.values\r\n      ? facilityPicker.values.filter((facility: QuestionReorderValue) => facility.selected)\r\n      : [];\r\n    const foundQuestion: any = questions[facilityPicker.name];\r\n\r\n    return patronPreferences\r\n      .slice(0, facilityPicker.prefRank)\r\n      .map((preference: PatronPreference) => {\r\n        const rank: number = preference.rank - 1;\r\n        const foundFacility: QuestionReorderValue = foundQuestion ? foundQuestion[rank] : facilities[rank];\r\n\r\n        if (!foundFacility) {\r\n          return preference;\r\n        }\r\n\r\n        const facilityKey: number = foundFacility.facilityKey;\r\n\r\n        return new PatronPreference({ ...preference, facilityKey });\r\n      })\r\n      .filter((preference: PatronPreference) => preference.facilityKey);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nimport { STORAGE_KEY } from '../housing.config';\r\n\r\nimport {\r\n  ObservableStorage,\r\n  ObservableStorageService,\r\n} from '@shared/services/observable-storage/observable-storage.service';\r\n\r\nimport { ApplicationStatus } from '../applications/applications.model';\r\nimport { ObservableSessionStorageService } from '@shared/services/observable-session-storage/observable-session-storage.service';\r\n\r\nexport interface QuestionsEntries {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface StoredApplication {\r\n  questions: QuestionsEntries;\r\n  status: ApplicationStatus;\r\n  createdDateTime: string;\r\n  submittedDateTime?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuestionsStorageService {\r\n  private readonly _key: string = `${STORAGE_KEY}-applications`;\r\n\r\n  private _observableStorage: ObservableStorage;\r\n\r\n  constructor(\r\n    private _platform: Platform,\r\n    private _observableStorageService: ObservableStorageService,\r\n    private _observableSessionStorageService: ObservableSessionStorageService\r\n  ) {\r\n    this._observableStorage = this._platform.is('desktop')\r\n      ? this._observableSessionStorageService\r\n      : this._observableStorageService;\r\n  }\r\n\r\n  getApplication(key: number): Observable<StoredApplication> {\r\n    return this._observableStorage.get(`${this._key}-${key}`);\r\n  }\r\n\r\n  getApplicationStatus(key: number): Observable<ApplicationStatus> {\r\n    return this.getApplication(key).pipe(\r\n      map((storedForm: StoredApplication) => (storedForm ? storedForm.status : null))\r\n    );\r\n  }\r\n\r\n  removeApplication(key: number): Observable<any> {\r\n    return this._observableStorage.remove(`${this._key}-${key}`);\r\n  }\r\n\r\n  getQuestions(key: number): Observable<QuestionsEntries> {\r\n    return this.getApplication(key).pipe(\r\n      map((storedForm: StoredApplication) => (storedForm ? storedForm.questions : null))\r\n    );\r\n  }\r\n\r\n  updateCreatedDateTime(key: number, createdDateTime: string = new Date().toISOString()): Observable<string> {\r\n    return this.getApplication(key).pipe(\r\n      switchMap((storedForm: StoredApplication) => {\r\n        if (storedForm && storedForm.createdDateTime) {\r\n          return of(storedForm.createdDateTime);\r\n        }\r\n\r\n        return this._observableStorage\r\n          .set(`${this._key}-${key}`, {\r\n            ...storedForm,\r\n            createdDateTime,\r\n          })\r\n          .pipe(map(() => createdDateTime));\r\n      })\r\n    );\r\n  }\r\n\r\n  updateSubmittedDateTime(key: number): Observable<string> {\r\n    const submittedDateTime: string = new Date().toISOString();\r\n\r\n    return this.getApplication(key).pipe(\r\n      switchMap((storedForm: StoredApplication) =>\r\n        this._observableStorage.set(`${this._key}-${key}`, {\r\n          ...storedForm,\r\n          submittedDateTime,\r\n        })\r\n      ),\r\n      map(() => submittedDateTime)\r\n    );\r\n  }\r\n\r\n  updateQuestions(key: number, formValue: any, status: number): Observable<any> {\r\n    return this.getApplication(key).pipe(\r\n      switchMap((storedForm: StoredApplication) => {\r\n        let questions: QuestionsEntries = storedForm && storedForm.questions ? storedForm.questions : {};\r\n\r\n        Object.keys(formValue).forEach(\r\n          (formControlName: any) => (questions[formControlName] = formValue[formControlName])\r\n        );\r\n\r\n        return this._observableStorage.set(`${this._key}-${key}`, {\r\n          ...storedForm,\r\n          status,\r\n          questions,\r\n        });\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\nimport { QuestionBase } from './types/question-base';\r\n\r\nexport * from './types/question-header';\r\nexport * from './types/question-paragraph';\r\nexport * from './types/question-textbox';\r\nexport * from './types/question-textarea';\r\nexport * from './types/question-date';\r\nexport * from './types/question-checkbox-group';\r\nexport * from './types/question-dropdown';\r\nexport * from './types/question-reorder';\r\nexport * from './types/question-form-control';\r\n\r\nexport interface QuestionsPage {\r\n  form: FormGroup;\r\n  questions: QuestionBase[];\r\n}\r\n\r\nexport enum QUESTIONS_SOURCES {\r\n  PATRON = 'PATRON',\r\n  FACILITY = 'FACILITY',\r\n  CORE = 'CORE',\r\n  FACILITY_TYPE = 'FACILITY_TYPE',\r\n  ASSET_TYPE = 'ASSET_TYPE',\r\n  CELL_PROVIDER = 'CELL_PROVIDER',\r\n  CONTRACT_DETAILS = 'CONTRACT_DETAILS',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormArray, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\r\n\r\nimport { integerValidator, numericValidator, parseJsonToArray } from '../utils';\r\n\r\nimport {\r\n  QuestionBase,\r\n  QuestionCheckboxGroup,\r\n  QuestionCheckboxGroupValue,\r\n  QuestionDate,\r\n  QuestionDropdown,\r\n  QuestionFormControl,\r\n  QuestionHeader,\r\n  QuestionParagraph,\r\n  QuestionRadioGroup,\r\n  QuestionTextarea,\r\n  QuestionTextbox,\r\n  QuestionContractDetails,\r\n  QuestionChargeScheduleBase,\r\n  QuestionDateSigned,\r\n} from './types';\r\n\r\nimport { QuestionReorder, QUESTIONS_SOURCES } from './questions.model';\r\nimport { QuestionFacilityAttributes } from '@sections/housing/questions/types/question-facility-attributes';\r\nimport { QuestionBlockquote } from '@sections/housing/questions/types/question-blockquote';\r\nimport { Attribute } from '@sections/housing/attributes/attributes.model';\r\nimport { QuestionsEntries } from '@sections/housing/questions/questions-storage.service';\r\nimport { CONTRACT_DETAIL_KEYS } from '@sections/housing/contracts/contracts.model';\r\n\r\nexport const QuestionConstructorsMap = {\r\n  header: QuestionHeader,\r\n  paragraph: QuestionParagraph,\r\n  text: QuestionTextbox,\r\n  textarea: QuestionTextarea,\r\n  date: QuestionDate,\r\n  select: QuestionDropdown,\r\n  'checkbox-group': QuestionCheckboxGroup,\r\n  'radio-group': QuestionRadioGroup,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuestionsService {\r\n  private _dataTypesValidators: { [key: string]: ValidatorFn } = {\r\n    integer: integerValidator(),\r\n    numeric: numericValidator(),\r\n  };\r\n\r\n  getQuestions(json: string): QuestionBase[] {\r\n    return this._mapToQuestions(parseJsonToArray(json));\r\n  }\r\n\r\n  splitByPages(questions: QuestionBase[]): QuestionBase[][] {\r\n    return questions.reduce(\r\n      (accumulator: QuestionBase[][], current: QuestionBase, index: number) => {\r\n        if (current && current instanceof QuestionBlockquote) {\r\n          return questions[index + 1] ? [...accumulator, []] : [...accumulator];\r\n        }\r\n\r\n        accumulator[accumulator.length - 1].push(current);\r\n\r\n        return accumulator;\r\n      },\r\n      [[]]\r\n    );\r\n  }\r\n\r\n  getQuestionsPages(json: string): QuestionBase[][] {\r\n    const questions: QuestionBase[] = this.getQuestions(json);\r\n\r\n    return this.splitByPages(questions);\r\n  }\r\n\r\n  toFormGroup(\r\n    questions: QuestionBase[],\r\n    storedQuestions: QuestionsEntries,\r\n    iteratee: (group: any, question: QuestionFormControl, questionName: string, storedValue: string) => void\r\n  ): FormGroup {\r\n    let group: any = {};\r\n\r\n    questions\r\n      .filter((question: QuestionBase) => question && (question as QuestionFormControl).name)\r\n      .forEach((question: QuestionFormControl) => {\r\n        const questionName: string = question.name;\r\n        const storedValue: any = storedQuestions && storedQuestions[questionName];\r\n\r\n        iteratee(group, question, questionName, storedValue);\r\n      });\r\n\r\n    return new FormGroup(group);\r\n  }\r\n\r\n  toQuestionCheckboxControl(storedValue: any, question: QuestionCheckboxGroup): FormArray {\r\n    const values: QuestionCheckboxGroupValue[] = storedValue || question.values;\r\n    const controls: FormControl[] = values.map((value: QuestionCheckboxGroupValue) => new FormControl(value.selected));\r\n\r\n    return new FormArray(controls);\r\n  }\r\n\r\n  getAttributeValue(attributes: Attribute[], question: QuestionFormControl): string {\r\n    const foundAttribute: Attribute = attributes.find(\r\n      (attribute: Attribute) => attribute.attributeConsumerKey === question.consumerKey\r\n    );\r\n\r\n    return foundAttribute ? foundAttribute.value : '';\r\n  }\r\n\r\n  addDataTypeValidator(question: QuestionTextbox, validators: ValidatorFn[]): void {\r\n    const dataType: string = question.dataType ? question.dataType.toLowerCase() : null;\r\n    const dataTypeValidator: ValidatorFn = this._dataTypesValidators[dataType];\r\n\r\n    if (dataTypeValidator) {\r\n      validators.push(dataTypeValidator);\r\n    }\r\n  }\r\n\r\n  private _mapToQuestions(questions: any[]): QuestionBase[] {\r\n    return questions\r\n      .map((question: any) => {\r\n        if (!question || !question.type) {\r\n          return new QuestionBase();\r\n        }\r\n\r\n        if (!QuestionConstructorsMap[question.type]) {\r\n          return new QuestionBase(question);\r\n        }\r\n\r\n        if (\r\n          (question as QuestionBlockquote).type === 'paragraph' &&\r\n          (question as QuestionBlockquote).subtype === 'blockquote'\r\n        ) {\r\n          return new QuestionBlockquote(question);\r\n        } else if ((question as QuestionReorder).facilityPicker) {\r\n          return new QuestionReorder(question);\r\n        } else if ((question as QuestionChargeScheduleBase).chargeSchedule) {\r\n          return new QuestionChargeScheduleBase(question);\r\n        } else if ((question as QuestionContractDetails).source) {\r\n          if ((question as QuestionContractDetails).source === QUESTIONS_SOURCES.CONTRACT_DETAILS) {\r\n            if ((question as QuestionContractDetails).contractId === CONTRACT_DETAIL_KEYS.DATE_SIGNED) {\r\n              return new QuestionDateSigned(question);\r\n            } else {\r\n              return new QuestionContractDetails(question);\r\n            }\r\n          } else if ((question as QuestionFacilityAttributes).source === QUESTIONS_SOURCES.FACILITY) {\r\n            return new QuestionFacilityAttributes(question);\r\n          }\r\n        }\r\n\r\n        return new QuestionConstructorsMap[question.type](question);\r\n      })\r\n      .sort(this._sortByQuestionDateSigned);\r\n  }\r\n\r\n  private _sortByQuestionDateSigned(current: QuestionBase, next: QuestionBase): number {\r\n    if (current instanceof QuestionDateSigned) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n","export * from './question-base';\r\nexport * from './question-checkbox-group';\r\nexport * from './question-date';\r\nexport * from './question-dropdown';\r\nexport * from './question-form-control';\r\nexport * from './question-header';\r\nexport * from './question-paragraph';\r\nexport * from './question-radio-group';\r\nexport * from './question-reorder';\r\nexport * from './question-textarea';\r\nexport * from './question-textbox';\r\nexport * from './question-charge-schedule';\r\nexport * from './question-contract-details';\r\nexport * from './question-date-signed';\r\n","export interface QuestionBaseOptions {\r\n  type?: string;\r\n  label?: string;\r\n  attribute?: string;\r\n}\r\n\r\nexport interface QuestionBaseOptionValue {\r\n  label: string;\r\n  value: string;\r\n  selected?: boolean;\r\n}\r\n\r\nexport class QuestionBase implements QuestionBaseOptions {\r\n  type: string;\r\n  label: string;\r\n  attribute: string;\r\n\r\n  constructor(options: QuestionBaseOptions = {}) {\r\n    this.type = options.type || '';\r\n    this.label = options.label || '';\r\n    this.attribute = options.attribute || null;\r\n  }\r\n}\r\n","import { isDefined } from '@sections/housing/utils';\r\n\r\nimport { QuestionBase, QuestionBaseOptions } from './question-base';\r\n\r\nexport interface QuestionParagraphOptions extends QuestionBaseOptions {\r\n  subtype?: string;\r\n}\r\n\r\nexport class QuestionBlockquote extends QuestionBase {\r\n  subtype: string;\r\n\r\n  constructor(options: QuestionParagraphOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as QuestionParagraphOptions;\r\n    }\r\n\r\n    super(options);\r\n\r\n    this.subtype = options.subtype || 'blockquote';\r\n  }\r\n}\r\n","import { isDefined } from '../../utils';\r\n\r\nimport { ChargeScheduleValue } from '@sections/housing/charge-schedules/charge-schedules.model';\r\nimport { QuestionBase, QuestionBaseOptions } from '@sections/housing/questions/types/question-base';\r\n\r\nexport interface QuestionChargeScheduleBaseOptions extends QuestionBaseOptions {\r\n  required: boolean;\r\n  inline: boolean;\r\n  name: string;\r\n  other: boolean;\r\n  values: ChargeScheduleValue[];\r\n  consumerKey: number;\r\n  chargeSchedule: boolean;\r\n}\r\n\r\nexport class QuestionChargeScheduleBase extends QuestionBase implements QuestionChargeScheduleBaseOptions {\r\n  required: boolean;\r\n  inline: boolean;\r\n  name: string;\r\n  other: boolean;\r\n  values: ChargeScheduleValue[];\r\n  consumerKey: number;\r\n  chargeSchedule: boolean;\r\n\r\n  constructor(options: QuestionChargeScheduleBaseOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as QuestionChargeScheduleBaseOptions;\r\n    }\r\n\r\n    super(options);\r\n\r\n    this.required = Boolean(options.required);\r\n    this.inline = Boolean(options.inline);\r\n    this.name = String(options.name);\r\n    this.other = Boolean(options.other);\r\n    this.values = Array.isArray(options.values)\r\n      ? options.values.map((value: any) => new ChargeScheduleValue(value))\r\n      : [];\r\n    this.consumerKey = Number(options.consumerKey);\r\n    this.chargeSchedule = Boolean(options.chargeSchedule);\r\n  }\r\n}\r\n\r\nexport interface QuestionChargeScheduleOptions extends QuestionBaseOptions {\r\n  chargeSchedulesGroup?: ChargeScheduleValue[][];\r\n}\r\n\r\nexport class QuestionChargeSchedule extends QuestionBase implements QuestionChargeScheduleOptions {\r\n  chargeSchedulesGroup: ChargeScheduleValue[][];\r\n\r\n  constructor(options: QuestionChargeScheduleOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as QuestionChargeScheduleBaseOptions;\r\n    }\r\n\r\n    super(options);\r\n\r\n    this.type = 'charge-schedules';\r\n    this.chargeSchedulesGroup = Array.isArray(options.chargeSchedulesGroup) ? options.chargeSchedulesGroup : [];\r\n  }\r\n}\r\n","import { QuestionFormControl, QuestionFormControlOptions } from './question-form-control';\r\n\r\nlet counter: number = 0;\r\n\r\nexport interface QuestionCheckboxGroupValue {\r\n  label: string;\r\n  value: string;\r\n  selected: boolean;\r\n}\r\n\r\nexport interface QuestionCheckboxGroupOptions extends QuestionFormControlOptions {\r\n  values?: QuestionCheckboxGroupValue[];\r\n}\r\n\r\nexport class QuestionCheckboxGroup extends QuestionFormControl implements QuestionCheckboxGroupOptions {\r\n  values: QuestionCheckboxGroupValue[];\r\n\r\n  constructor(options: QuestionCheckboxGroupOptions = {}) {\r\n    super(options);\r\n\r\n    this.name = options.name || `checkbox-group-${counter++}`;\r\n    this.values = options.values || [];\r\n  }\r\n}\r\n","import { isDefined } from '@sections/housing/utils';\r\n\r\nimport { QuestionFormControl, QuestionFormControlOptions } from './question-form-control';\r\n\r\nlet counter: number = 0;\r\n\r\nexport interface QuestionContractDetailsOptions extends QuestionFormControlOptions {\r\n  subtype?: string;\r\n  source?: string;\r\n  contractId?: string;\r\n}\r\n\r\nexport class QuestionContractDetails extends QuestionFormControl implements QuestionContractDetailsOptions {\r\n  subtype: string;\r\n  source: string;\r\n  contractId?: string;\r\n\r\n  constructor(options: QuestionContractDetailsOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as QuestionContractDetailsOptions;\r\n    }\r\n\r\n    super(options);\r\n\r\n    this.type = options.type || 'text';\r\n    this.name = options.name || `text-${counter++}`;\r\n    this.subtype = options.subtype || 'text';\r\n    this.source = String(options.source);\r\n    this.contractId = String(options.contractId);\r\n  }\r\n}\r\n","import { isDefined } from '@sections/housing/utils';\r\n\r\nimport { QuestionFormControl } from '@sections/housing/questions/types/question-form-control';\r\nimport { QuestionContractDetailsOptions } from '@sections/housing/questions/types/question-contract-details';\r\n\r\nexport class QuestionDateSigned extends QuestionFormControl implements QuestionContractDetailsOptions {\r\n  constructor(options: QuestionContractDetailsOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as QuestionContractDetailsOptions;\r\n    }\r\n\r\n    super(options);\r\n\r\n    this.type = 'date-signed';\r\n  }\r\n}\r\n","import { QuestionFormControl, QuestionFormControlOptions } from './question-form-control';\r\n\r\nlet counter: number = 0;\r\n\r\nexport class QuestionDate extends QuestionFormControl implements QuestionFormControlOptions {\r\n  constructor(options: QuestionFormControlOptions = {}) {\r\n    super(options);\r\n\r\n    this.name = options.name || `date-${counter++}`;\r\n  }\r\n}\r\n","import { QuestionFormControl, QuestionFormControlOptions } from './question-form-control';\r\n\r\nlet counter: number = 0;\r\n\r\nexport interface QuestionDropdownValue {\r\n  label: string;\r\n  value: string;\r\n  selected?: boolean;\r\n}\r\n\r\nexport interface QuestionDropdownOptions extends QuestionFormControlOptions {\r\n  values?: QuestionDropdownValue[];\r\n}\r\n\r\nexport class QuestionDropdown extends QuestionFormControl implements QuestionDropdownOptions {\r\n  values: QuestionDropdownValue[];\r\n\r\n  constructor(options: QuestionDropdownOptions = {}) {\r\n    super(options);\r\n\r\n    this.values = options.values || [];\r\n    this.name = options.name || `select-${counter++}`;\r\n  }\r\n}\r\n","import { isDefined } from '@sections/housing/utils';\r\n\r\nimport { QuestionFormControl, QuestionFormControlOptions } from './question-form-control';\r\n\r\nlet counter: number = 0;\r\n\r\nexport interface QuestionContractDetailsOptions extends QuestionFormControlOptions {\r\n  subtype?: string;\r\n  source?: string;\r\n  contractId?: string;\r\n}\r\n\r\nexport class QuestionFacilityAttributes extends QuestionFormControl implements QuestionContractDetailsOptions {\r\n  subtype: string;\r\n  source: string;\r\n  contractId?: string;\r\n\r\n  constructor(options: QuestionContractDetailsOptions) {\r\n    if (!isDefined(options) || typeof options !== 'object') {\r\n      options = {} as QuestionContractDetailsOptions;\r\n    }\r\n\r\n    super(options);\r\n\r\n    this.type = options.type || 'text';\r\n    this.name = options.name || `text-${counter++}`;\r\n    this.subtype = options.subtype || 'text';\r\n    this.source = String(options.source);\r\n    this.contractId = String(options.contractId);\r\n  }\r\n}\r\n","import { QuestionBase, QuestionBaseOptions } from './question-base';\r\n\r\nexport interface QuestionFormControlOptions extends QuestionBaseOptions {\r\n  name?: string;\r\n  required?: boolean;\r\n  consumerKey?: number;\r\n  preferenceKey?: number;\r\n  facilityKey?: number;\r\n  dataType?: string;\r\n  source?: string;\r\n}\r\n\r\nexport class QuestionFormControl extends QuestionBase implements QuestionFormControlOptions {\r\n  name: string;\r\n  required: boolean;\r\n  consumerKey: number;\r\n  preferenceKey: number;\r\n  facilityKey: number;\r\n  dataType?: string;\r\n  source?: string;\r\n\r\n  constructor(options: QuestionFormControlOptions = {}) {\r\n    super(options);\r\n\r\n    this.name = options.name;\r\n    this.required = !!options.required;\r\n    this.consumerKey = options.consumerKey >= 0 ? options.consumerKey : null;\r\n    this.preferenceKey = options.preferenceKey >= 0 ? options.preferenceKey : null;\r\n    this.facilityKey = options.facilityKey >= 0 ? options.facilityKey : null;\r\n\r\n    if (options.dataType) {\r\n      this.dataType = String(options.dataType);\r\n    }\r\n\r\n    if (options.source) {\r\n      this.source = String(options.source);\r\n    }\r\n  }\r\n}\r\n","import { QuestionBase, QuestionBaseOptions } from './question-base';\r\n\r\nexport interface QuestionHeaderOptions extends QuestionBaseOptions {\r\n  subtype?: string;\r\n}\r\n\r\nexport class QuestionHeader extends QuestionBase {\r\n  subtype: string;\r\n\r\n  constructor(options: QuestionHeaderOptions = {}) {\r\n    super(options);\r\n\r\n    this.subtype = options.subtype || 'h3';\r\n  }\r\n}\r\n","import { QuestionBase, QuestionBaseOptions } from './question-base';\r\n\r\nexport interface QuestionParagraphOptions extends QuestionBaseOptions {\r\n  subtype?: string;\r\n}\r\n\r\nexport class QuestionParagraph extends QuestionBase {\r\n  subtype: string;\r\n\r\n  constructor(options: QuestionParagraphOptions = {}) {\r\n    super(options);\r\n\r\n    this.subtype = options.subtype || 'p';\r\n  }\r\n}\r\n","import { QuestionFormControl, QuestionFormControlOptions } from './question-form-control';\r\n\r\nlet counter: number = 0;\r\n\r\nexport interface QuestionRadioGroupValue {\r\n  label: string;\r\n  value: string;\r\n  selected: boolean;\r\n}\r\n\r\nexport interface QuestionRadioGroupOptions extends QuestionFormControlOptions {\r\n  values?: QuestionRadioGroupValue[];\r\n}\r\n\r\nexport class QuestionRadioGroup extends QuestionFormControl implements QuestionRadioGroupOptions {\r\n  values: QuestionRadioGroupValue[];\r\n\r\n  constructor(options: QuestionRadioGroupOptions = {}) {\r\n    super(options);\r\n\r\n    this.name = options.name || `radio-group-${counter++}`;\r\n    this.values = options.values || [];\r\n  }\r\n}\r\n","import { define } from '../../utils';\r\n\r\nimport { QuestionFormControl, QuestionFormControlOptions } from './question-form-control';\r\n\r\nimport { PatronPreference } from '@sections/housing/applications/applications.model';\r\n\r\nexport interface QuestionReorderOptions extends QuestionFormControlOptions {\r\n  inline?: boolean;\r\n  facilityPicker?: boolean;\r\n  values?: QuestionReorderValue[];\r\n  prefRank?: number;\r\n  PrefKeys?: QuestionReorderPreference[];\r\n}\r\n\r\nexport interface QuestionReorderValue {\r\n  label: string;\r\n  value: string;\r\n  selected: boolean;\r\n  facilityKey?: number;\r\n}\r\n\r\nexport interface QuestionReorderPreference {\r\n  defaultRank: number;\r\n  preferenceKey: number;\r\n  active: boolean;\r\n  name: string;\r\n  preferenceType: string;\r\n}\r\n\r\nexport class QuestionReorder extends QuestionFormControl implements QuestionReorderOptions {\r\n  inline: boolean;\r\n  facilityPicker: boolean;\r\n  values: QuestionReorderValue[];\r\n  prefRank: number;\r\n  PrefKeys: QuestionReorderPreference[];\r\n\r\n  constructor(options: QuestionReorderOptions = {}) {\r\n    super(options);\r\n\r\n    this.type = 'facility-picker';\r\n    this.inline = define(options.inline, Boolean(options.inline));\r\n    this.facilityPicker = define(options.facilityPicker, Boolean(options.facilityPicker));\r\n    this.values = options.values || [];\r\n    this.prefRank = define(options.prefRank, Number(options.prefRank));\r\n\r\n    this.values = options.values || [];\r\n    this.PrefKeys = options.PrefKeys || [];\r\n  }\r\n\r\n  static sort(\r\n    preferences: PatronPreference[],\r\n    current: QuestionReorderValue,\r\n    next: QuestionReorderValue,\r\n    length: number\r\n  ): number {\r\n    let currentIndex: number = preferences.findIndex(\r\n      (preference: PatronPreference) => preference.facilityKey === current.facilityKey\r\n    );\r\n    let nextIndex: number = preferences.findIndex(\r\n      (preference: PatronPreference) => preference.facilityKey === next.facilityKey\r\n    );\r\n\r\n    if (currentIndex === -1) {\r\n      currentIndex = length;\r\n    }\r\n\r\n    if (nextIndex === -1) {\r\n      nextIndex = length;\r\n    }\r\n\r\n    return currentIndex - nextIndex;\r\n  }\r\n}\r\n","import { QuestionTextbox, QuestionTextboxOptions } from './question-textbox';\r\n\r\nlet counter: number = 0;\r\n\r\nexport class QuestionTextarea extends QuestionTextbox {\r\n  constructor(options: QuestionTextboxOptions = {}) {\r\n    super(options);\r\n\r\n    this.type = options.type || 'textarea';\r\n    this.subtype = options.subtype || 'textarea';\r\n    this.name = options.name || `textarea-${counter++}`;\r\n  }\r\n}\r\n","import { QuestionFormControl, QuestionFormControlOptions } from './question-form-control';\r\n\r\nlet counter: number = 0;\r\n\r\nexport interface QuestionTextboxOptions extends QuestionFormControlOptions {\r\n  subtype?: string;\r\n}\r\n\r\nexport class QuestionTextbox extends QuestionFormControl implements QuestionTextboxOptions {\r\n  subtype: string;\r\n\r\n  constructor(options: QuestionTextboxOptions = {}) {\r\n    super(options);\r\n\r\n    this.type = options.type || 'text';\r\n    this.name = options.name || `text-${counter++}`;\r\n    this.subtype = options.subtype || 'text';\r\n  }\r\n}\r\n","export class Term {\r\n  termId: number;\r\n  termStartDate: string;\r\n  termEndDate: string;\r\n  termName: string;\r\n\r\n  constructor(options: any) {\r\n    if (options == null || typeof options !== 'object') {\r\n      options = {};\r\n    }\r\n\r\n    this.termId = Number(options.termId);\r\n    this.termStartDate = String(options.termStartDate);\r\n    this.termEndDate = String(options.termEndDate);\r\n    this.termName = String(options.termName);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { Environment } from '../../../environment';\r\n\r\nimport { HousingProxyService } from '../housing-proxy.service';\r\n\r\nimport { Term } from './terms.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TermsService {\r\n  private _termIdSource: ReplaySubject<number> = new ReplaySubject<number>(1);\r\n\r\n  termId$: Observable<number> = this._termIdSource.asObservable();\r\n\r\n  constructor(private _housingProxyService: HousingProxyService) {}\r\n\r\n  getTerms(): Observable<Term[]> {\r\n    const apiUrl: string = `${\r\n      Environment.currentEnvironment.housing_aws_url\r\n    }/patron-applications/v.1.0/patron-terms/patrons/self`;\r\n\r\n    return this._housingProxyService.get<Term[]>(apiUrl).pipe(\r\n      map((terms: any[]) => (Array.isArray(terms) ? terms.map((term: any) => new Term(term)) : [])),\r\n      catchError(() => of([]))\r\n    );\r\n  }\r\n\r\n  setTermId(termId: number): void {\r\n    this._termIdSource.next(termId);\r\n  }\r\n}\r\n","import { isDefined } from './is-defined';\r\n\r\n/**\r\n * Check if value is not null or undefined\r\n * and then set to value otherwise set to fallback\r\n *\r\n * @param value {*} - Value to check if not null or undefined\r\n * @param fallback {*} - Set this value if not null or undefined\r\n *\r\n * @returns {*}\r\n */\r\nexport function define<T>(value: any, fallback: any = value): T {\r\n  return isDefined(value) ? value : fallback;\r\n}\r\n","/**\r\n * Checking if some property or variable has value\r\n *\r\n * @param {*} value - Value to check\r\n *\r\n * @returns {Boolean}\r\n */\r\nexport function hasValue(value: any): boolean {\r\n  return Array.isArray(value)\r\n    ? !value.some((item: any) => item == null || item === '')\r\n    : !(value == null || value === '');\r\n}\r\n","export * from './parse-json-to-array';\r\nexport * from './has-value';\r\nexport * from './define';\r\nexport * from './is-defined';\r\nexport * from './validators';\r\nexport * from './trim-empty-keys';\r\n","/**\r\n * Checks if value is not null or undefined\r\n *\r\n * @param value {*} - Value to check\r\n *\r\n * @returns {Boolean}\r\n */\r\nexport function isDefined(value: any): boolean {\r\n  return value != null;\r\n}\r\n","/**\r\n * Tries to parse json and returns parsed array\r\n * or empty array\r\n *\r\n * @param json {String} - json string to parse\r\n *\r\n * @returns {Array}\r\n */\r\nexport function parseJsonToArray(json: string): any[] {\r\n  try {\r\n    const parsedArray: any = JSON.parse(json);\r\n\r\n    return Array.isArray(parsedArray) ? parsedArray : [];\r\n  } catch (error) {\r\n    return [];\r\n  }\r\n}\r\n","import { isDefined } from './is-defined';\r\n\r\n/**\r\n * Removes properties which values are null or undefined\r\n *\r\n * @param collection {*} - Collection to trim\r\n *\r\n * @returns {*} - Trimmed collection\r\n */\r\nexport function trimEmptyKeys(collection: any): any {\r\n  return Object.keys(collection)\r\n    .filter((key: string) => isDefined(collection[key]))\r\n    .reduce((accumulator: any, key: string) => ({ ...accumulator, [key]: collection[key] }), {});\r\n}\r\n","export * from './integer';\r\nexport * from './numeric';\r\n","import { ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport function integerValidator(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    if (control.value && control.value !== `${parseInt(control.value, 10)}`) {\r\n      return { integer: true };\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n","import { ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport function numericValidator(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    if (control.value && control.value !== `${parseFloat(control.value)}`) {\r\n      return { numeric: true };\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subscriber } from 'rxjs';\r\n\r\nimport { ObservableStorage } from '../observable-storage/observable-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ObservableSessionStorageService implements ObservableStorage {\r\n  get(key: string): Observable<any> {\r\n    return new Observable((subscriber: Subscriber<any>) => {\r\n      const stringifiedValue: string = window.sessionStorage.getItem(key);\r\n      const value: any = JSON.parse(stringifiedValue);\r\n\r\n      subscriber.next(value);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  set(key: string, value: any): Observable<any> {\r\n    return new Observable((subscriber: Subscriber<any>) => {\r\n      const stringifiedValue: any = JSON.stringify(value);\r\n\r\n      window.sessionStorage.setItem(key, stringifiedValue);\r\n\r\n      subscriber.next(value);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  remove(key: string): Observable<any> {\r\n    return new Observable((subscriber: Subscriber<any>) => {\r\n      window.sessionStorage.removeItem(key);\r\n\r\n      subscriber.next();\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  clear(): Observable<void> {\r\n    return new Observable((subscriber: Subscriber<void>) => {\r\n      window.sessionStorage.clear();\r\n\r\n      subscriber.next();\r\n      subscriber.complete();\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Observable, from } from 'rxjs';\r\n\r\nexport interface ObservableStorage {\r\n  get(key: string): Observable<any>;\r\n  set(key: string, value: any): Observable<any>;\r\n  remove(key: string): Observable<any>;\r\n  clear(): Observable<void>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ObservableStorageService implements ObservableStorage {\r\n  constructor(private _storage: Storage) {}\r\n\r\n  get(key: string): Observable<any> {\r\n    return from(this._storage.get(key));\r\n  }\r\n\r\n  set(key: string, value: any): Observable<any> {\r\n    return from(this._storage.set(key, value));\r\n  }\r\n\r\n  remove(key: string): Observable<any> {\r\n    return from(this._storage.remove(key));\r\n  }\r\n\r\n  clear(): Observable<void> {\r\n    return from(this._storage.clear());\r\n  }\r\n}\r\n"],"sourceRoot":""}