name: Run UI Tests on Emulator
'on':
  push:
    branches:
      - feature/GET-6645-setup-github-actions-to-run-app
  pull_request:
    branches:
      - feature/GET-6645-setup-github-actions-to-run-app
  workflow_dispatch: null

permissions:
  contents: read
  pages: write
  id-token: write
    
env:
  ANDROID_ARCH: x86_64
  ANDROID_TARGET: google_apis
  ANDROID_BUILD_TOOLS_VERSION: 33.0.2
  ANDROID_SDK_PACKAGES: system-images;android-33;google_apis;x86_64 platforms;android-33 build-tools;33.0.2 platform-tools emulator
  JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
  EMULATOR_TIMEOUT: 700
  EMULATOR_NAME: pixel
  API_LEVEL: 33
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  NODE_VERSION: "20.0.0"
  APPIUM_VERSION: "2.12.1"
  UIAUTOMATOR2_VERSION: "2.0.1"

jobs:
  webriverIo-emulator:
    timeout-minutes: 400
    
    runs-on: ubuntu-22.04
    
    steps:
      - uses: actions/checkout@v4

      - name: Enable KVM group perms on Linux runner
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
        
      - name: Add avdmanager and sdkmanager to system PATH
        run: |
            echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}:$JAVA_HOME/bin" >> $GITHUB_PATH
      
      - name: Install Sdk
        run: |
           yes Y | sdkmanager --licenses
           sdkmanager --install ${ANDROID_SDK_PACKAGES}
  
      - name: Build emulator
        run: |
            echo "no" | avdmanager --verbose create avd --force -n $EMULATOR_NAME --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}"
        
      - name: Launch emulator
        run: |
          node -v
          chmod +x ./scripts/start-emulator.sh
          EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ./scripts/start-emulator.sh
          
      - name: Setup dependencies
        run: |
          rm package-lock.json
          yarn add pnpm
          pnpm install node@$NODE_VERSION
          pnpm install
          pnpm install -g appium@$APPIUM_VERSION
          appium driver install uiautomator2@$UIAUTOMATOR2_VERSION

      - name: Build project
        run: | 
          pnpm build-appflow
          pnpm cap sync android

      # - name: Generate .apk
      #   run: | 
      #     cd android
      #     gradle assembleDebug

      # - name: Deploy .apk on emulator
      #   run: | 
      #     adb wait-for-device
      #     adb shell getprop init.svc.bootanim | grep -m 1 stopped
      #     chmod +rwx ./android/app/build/outputs/apk/debug/app-debug.apk
      #     adb install -r ./android/app/build/outputs/apk/debug/app-debug.apk
          
      # - name: Launch App
      #   run: | 
      #     adb shell am start -W -n com.cbord.get/.MainActivity
      #     adb shell pidof com.cbord.get
      #     adb devices

      # - name: Run All UI Tests
      #   run: |
      #     chmod +x ./run-automation.sh
      #     ./run-automation.sh
 
          