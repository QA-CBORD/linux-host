{
  "root": true,
  "overrides": [
    {
      "files": ["*.component.html", "*.page.html", "settings.html", "*-screen.html"],
      "parser": "@angular-eslint/template-parser",
      "extends": ["plugin:@angular-eslint/recommended", "plugin:@angular-eslint/template/recommended"],
      "rules": {
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/no-implied-eval": "off",
        "@typescript-eslint/no-throw-literal": "off",
        "strict": "off",
        "import/first": "off",
        "lines-around-directive": "off",
        "@angular-eslint/template/no-negated-async": "off",
        "@angular-eslint/template/accessibility-valid-aria": "error",
        "@angular-eslint/template/accessibility-alt-text": "error",
        "@angular-eslint/template/accessibility-label-for": "error",
        "@angular-eslint/template/accessibility-role-has-required-aria": "error",
        "@angular-eslint/template/accessibility-elements-content": "error",
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        // Eventually the severity of these warns should be increased
        "@angular-eslint/template/conditional-complexity": "warn", 
        "@angular-eslint/template/no-positive-tabindex": "warn",
        "@angular-eslint/template/click-events-have-key-events": "warn",
        "@angular-eslint/template/mouse-events-have-key-events": "warn",
        "@angular-eslint/template/no-any": "warn",
        "@angular-eslint/template/cyclomatic-complexity": "warn"
      }
    },
    {
      "files": ["*.ts"],
      "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint"],
      "rules": {
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "no-restricted-syntax": [
          "error",
          {
            "selector": "CallExpression[callee.object.name='console'][callee.property.name!=/^(error)$/]",
            "message": "Unexpected property on console object was called"
          }
        ]
      }
    }
  ]
}
